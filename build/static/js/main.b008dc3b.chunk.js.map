{"version":3,"sources":["assets/img/search.png","assets/img/back.png","User/LoginForm.js","header.js","HomePage/HomePage.js","Service/DomainRow.js","components/Pagination/PaginationPostAndComment.js","Service/RankingIndex.js","Service/ServicePage.js","components/Grid/GridItem.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardIconStyle.js","components/Card/CardIcon.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","assets/jss/material-dashboard-react/components/cardFooterStyle.js","components/Card/CardFooter.js","assets/jss/material-dashboard-react/views/dashboardStyle.js","components/Dashboard.js","Service/DashboardPage.js","404Page.js","User/JoinForm.js","User/PwChangeModal.js","User/UserPageForm.js","LoginPage.js","User/NewUserList.js","components/Comment/CommentEditor.js","User/UserProfileModal.js","components/Comment/CommentReply.js","components/Comment/CommentsRow.js","components/Post/Post.js","components/Post/PostRow.js","components/Post/PostList.js","components/editor/MyUploadAdapter.js","components/editor/MWEditor.js","components/filereader/MWFileReader.js","components/Post/PostUpdate.js","components/BbsQnAView.js","components/BbsNotificationView.js","components/Post/SearchPosts.js","components/Post/BoardList.js","upload.js","body.js","ErrorBoundary.js","index.js"],"names":["module","exports","axios","defaults","withCredentials","LoginForm","state","show","login","loginId","value","loginPw","undefined","cogoToast","warn","focus","send_param","password","post","then","response","status","expiresTime","Date","data","tokenExpired","$","cookie","accessToken","expires","success","setTimeout","window","location","href","error","reason","catch","err","console","log","handleKeyPress","e","key","Modal","this","props","onHide","showHandler","Header","closeButton","Title","Body","Form","className","Group","Label","Control","type","maxLength","ref","placeholder","onKeyPress","Button","style","marginTop","onClick","variant","block","Component","logout","removeCookie","handleLoginFormShow","setState","loginFormShow","loginState","categoryStyle","color","textDecoration","padding","Navbar","id","backgroundColor","expand","Brand","alt","src","width","height","marginLeft","Toggle","aria-controls","Collapse","Nav","to","pathname","inline","Link","HomePage","Image","borderBottom","DomainRow","index","currentPage","pageSize","useState","setDomain","Index","setIndex","useEffect","date","fontWeight","textAlign","paddingTop","domain","updateDate","Moment","format","hit","PaginationPostAndComment","totalPage","paginate","pageNumber","i","push","map","pageNum","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","RankingIndex","domains","totalPages","startIndex","keyword","getRankingIndex","send_params","page","get","params","res","size","number","numberOfElements","returnedDomains","content","colSpan","selected","forceUpdate","minWidth","minHeight","marginBottom","Row","Col","sm","Table","striped","bordered","hover","ServicePage","checkPermission","message","history","isPaid","notify","search","headers","container","backgroundImage","background","backgroundSize","backgroundRepeat","marginRight","paddingLeft","paddingRight","border","borderRadius","searchIcon","FormControl","useStyles","makeStyles","grid","GridItem","classes","children","rest","Grid","item","margin","GridContainer","hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","primaryBoxShadow","boxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","title","borderTop","fontFamily","lineHeight","cardStyle","card","position","display","flexDirection","wordWrap","fontSize","cardPlain","cardProfile","cardChart","styles","Card","plain","profile","chart","cardClasses","classNames","cardHeaderStyle","cardHeader","zIndex","overflow","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","icon","cardHeaderClasses","cardIconStyle","cardIcon","float","CardIcon","cardIconClasses","cardBodyStyle","cardBody","flex","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","cardFooterStyle","cardFooter","justifyContent","alignItems","cardFooterProfile","cardFooterPlain","cardFooterStats","top","cardFooterChart","CardFooter","cardFooterClasses","dashboardStyle","successText","upArrowCardCategory","cardCategory","cardCategoryWhite","cardTitle","cardTitleWhite","Dashboard","d","totalKeywordCount","setTotalKeywordCount","totalUserCount","setTotalUserCount","averageAccuracy","setAverageAccuracy","searchKeywordTop","setSearchKeywordTop","domainTop","setDomainTop","getDashBoard","search_dates","search_counts","keywordCount","memberCount","searchKeywords","getDate","now","todayMonth","getMonth","todayDate","getFullYear","xs","md","today_keyword_count","accuracy","columns","arrayOption","DashboardPage","today_user_count","total_user_count","getKeywordCount","keyword_count","getUserCount","total_cnt","today_cnt","getDomainList","domain_list","slice","getAccuracy","getDomainSearchInfo","interval","setInterval","clearInterval","InvalidPage","class","default","JoinForm","join","joinId","joinEmail","joinName","joinPw","telphone","telPhoneRegExp","idRegExp","emailRegExp","pwRegExp","match","email","name","telephone","returnData","dupLoginIdCheck","dupEmailCheck","controlId","Text","PwChangeModalForm","pwChange","currentPw","newPw","confirmNewPw","newPassword","put","UserPageForm","handlePwChangeModalShow","pwChangeModalShow","fileUploadHandler","FormData","append","pictures","imgPath","imageUrl","getUserInfo","user","role","imgUri","handleTelephoneChange","target","handleEmailChange","handleHidden","hidden","handleNameChange","userInfoUpdate","telePhoneRegExp","userDeleteCheck","confirm","userDelete","delete","onChange","retained_star","s3_url","userDeleteModalShow","onDrop","bind","pictureFiles","pictureDataURLs","concat","Segment","doubling","Column","Placeholder","Description","Content","withIcon","buttonText","imgExtension","maxFileSize","withLabel","singleImage","widths","Input","label","readOnly","active","PwChangeModal","LoginPage","login_id","passwd","token","common","paddingBottom","NewUserList","list","total","obsRef","useRef","List","setList","setPage","load","setLoad","preventRef","endRef","setRole","setSearch","observer","IntersectionObserver","obsHandler","threshold","current","observe","disconnect","getUser","entries","isIntersecting","prev","updateUserRole","memberId","useCallback","onSubmit","searchWord","createDate","CommentEditor","createComment","CommentContent","comment","boardId","reload","onEnterPress","keyCode","shiftKey","preventDefault","rows","placehoder","onKeyDown","CommentReply","isReplyOrUpdate","setIsReplyOrUpdate","setBoardId","parentCommentId","setParentComentId","commentContent","setCommentContent","setContent","parentId","commentId","CommentsRow","commentRow","comments","replyVisible","setReplyVisible","editVisible","setEditVisible","deep","deleteComment","handleUserProfileShow","Comment","Avatar","memberImgUri","cursor","Author","as","author","Metadata","available","editable","Actions","Action","Post","postType","boardName","userProfileModalShow","userImageUri","numberComment","DateFormat","deletePost","goBack","Category","post_type","getShow","memberImageUri","updateTime","dangerouslySetInnerHTML","__html","ButtonGroup","aria-label","disabled","updatePost","getComments","returnedComments","Jumbotron","PostRow","setPost","query","PostList","posts","searchOption","url","getPosts","send_body","returnType","boardType","option","returnedPosts","whitePost","handleSearch","handleSearchOption","MyUploadAdapter","loader","xhr","XMLHttpRequest","open","setRequestHeader","responseType","resolve","reject","file","genericErrorText","addEventListener","upload","evt","lengthComputable","uploadTotal","uploaded","loaded","send","Promise","_initRequest","_initListeners","_sendRequest","abort","MWEditor","mode","defaultToolbar","editorConfig","plugins","Essentials","Highlight","Paragraph","Alignment","Heading","Bold","ImageResize","Italic","ImageUpload","ImageToolbar","ImageStyle","ImageCaption","BlockQuote","toolbar","heading","options","model","view","image","resizeUnit","alignment","highlight","editor","ClassicEditor","config","onInit","createUploadAdapter","event","getData","onBlur","onFocus","MWFileReader","accept","capture","multiple","fileQueue","setFileQueue","theme","button","spacing","root","fileattach","fileselect","checkbox","fileItem","flexBasis","fileTitle","fileQueueMap","Math","round","Number","_addFileQueue","some","f","alert","queue","_removeFileQueue","tempQueue","fileName","forEach","idx","arr","splice","files","Array","isArray","dataTransfer","items","kind","getAsFile","onDragOver","htmlFor","component","document","getElementsByName","checked","defaultProps","QnAPostUpdate","useLocation","flexWrap","textField","textFieldInput","buttonInc","pair","TextField","defaultValue","BbsQnAView","BbsNotificationView","SearchPosts","setKeyword","setSearchOption","setPosts","setCurrentPage","setTotalPages","BoardList","boards","boardImage","getBoardList","boardList","board","maxWidth","uploadImage","CssBaseline","path","exact","PostUpdate","PostQnAWirte","PostNotificationWrite","Upload","PostSearchList","UserList","HomepageForm","ErrorBoundary","errorInfo","ErrorScreen","fallback","DefaultErrorScreen","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b008dc3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.63f0d6de.png\";","module.exports = __webpack_public_path__ + \"static/media/back.84d304b1.png\";","import React, { Component } from \"react\";\n// import moment from 'moment-timezone';\nimport { Form, Button, Modal } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\nimport cogoToast from \"cogo-toast\"; //로그인, 로그아웃 처리 (쿠키값이 있으면 게시글 보여주고, 쿠키값 없으면 회원가입, 로그인 보여줌)\n// import { RepeatOneSharp } from \"@material-ui/icons\";\naxios.defaults.withCredentials = true; // node.js server와 통신 구현 -> 동일 기원(host)가 아니여도 접근할 수 있도록 구현 \n// axios.defaults.headers.common['x-access-token'] = `test`;\n// const instance = axios.create({\n// });\n\n\nclass LoginForm extends Component {\n  \n  state = {\n    show: false,\n  }\n  \n  componentDidMount() {\n\n  }\n  \n\n  //로그인\n  login = () => {\n    const loginId = this.loginId.value;\n    const loginPw = this.loginPw.value;\n\n    if (loginId === \"\" || loginId === undefined) {\n      cogoToast.warn(\"아이디를 입력해주세요.\");\n      this.loginId.focus();\n      return;\n    } else if (loginPw === \"\" || loginPw === undefined) {\n      cogoToast.warn(\"비밀번호를 입력해주세요.\");\n      this.loginPw.focus();\n      return;\n    }\n\n    const send_param = {\n      //headers,\n      loginId: this.loginId.value,\n      password: this.loginPw.value\n    };\n    axios\n      .post(\"/login\", send_param)\n      //정상 수행\n      .then(response => {\n        if (response.status === 200) {\n          \n          const expiresTime = new Date(response.data.data.tokenExpired);\n          $.cookie(\"accessToken\", response.data.data.accessToken, { expires: expiresTime });\n          // const a = new Date();\n          \n          cogoToast.success(\"로그인에 성공했습니다.\");\n          setTimeout(function() {\n            window.location.href=\"/\";\n          }, 1000);\n        } \n        else {\n          cogoToast.error(response.data.reason);\n          this.loginId.value = \"\";\n          this.loginPw.value = \"\";\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      this.login();\n    }\n  };\n\n  render() {\n    const buttonStyle = {\n      marginTop: 10\n    };\n\n    return (\n      <Modal show={this.props.show} onHide={this.props.showHandler}>\n      <Modal.Header closeButton>\n      <Modal.Title>로그인</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <Form className=\"container\">\n        <Form.Group>\n          <Form.Label>ID</Form.Label>\n          <Form.Control\n            type=\"id\"\n            maxLength=\"20\"\n            ref={ref => (this.loginId = ref)}\n            placeholder=\"Enter ID\"\n            onKeyPress={this.handleKeyPress}\n          />\n          <br/>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            maxLength=\"20\"\n            ref={ref => (this.loginPw = ref)}\n            placeholder=\"Password\"\n            onKeyPress={this.handleKeyPress}\n          />\n          <Button\n            style={buttonStyle}\n            onClick={this.login}\n            variant=\"dark\"\n            type=\"button\"\n            block\n          >\n            로그인\n          </Button>\n        </Form.Group>\n      </Form>\n      </Modal.Body>\n      </Modal>\n     \n    );\n  }\n}\n\nexport default LoginForm;\n","import React, {Component} from 'react';\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport LoginForm from \"./User/LoginForm\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\nimport cogoToast from 'cogo-toast';\naxios.defaults.withCredentials = true;\n\nclass Header extends Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      loginState: false,\n      loginFormShow: false,\n    }\n  }\n\n  componentDidMount(){\n    if ($.cookie(\"accessToken\")){\n      this.setState({\n        loginState: true\n      \n      });\n    } else{\n      this.setState({\n        loginState: false      \n      });\n    }\n  }\n\n  logout = () => {\n    // axios\n    //   .post(\"/logout\", {\n    //         headers: {\n    //           'Authorization': 'Bearer ' + $.cookie('accessToken'),\n    //         }\n    //       })\n    //   .then( (response) => {\n    //     if(response.data.message){\n    //       $.removeCookie(\"accessToken\");\n    //       // $.removeCookie(\"tokenType\");\n    //       cogoToast.success(\"로그아웃에 성공 했습니다.\");\n    //       setTimeout(function() {\n    //         window.location.href=\"/\";\n    //       }, 1000);\n    //     }\n    //   });\n\n    $.removeCookie(\"accessToken\");\n    cogoToast.success(\"로그아웃에 성공했습니다.\");\n    window.location.href=\"/\";\n  };\n\n  handleLoginFormShow = () =>{\n    this.setState({\n      loginFormShow: !this.state.loginFormShow\n    });\n    \n  }\n\n  render(){\n    \n    const categoryStyle = {\n      color:\"white\",\n      textDecoration: \"none\",\n      padding: \"8px\" \n    }\n\n    return(\n    <> \n    <Navbar id= 'root' style={{backgroundColor: \"#090707\"}} expand=\"lg\"  variant=\"dark\">\n      <Navbar.Brand href=\"/\">\n        <img\n        alt=\"\"\n        src=\"/img/logo_mini2.png\"\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top\"\n        />\n        <Navbar.Brand style={{ marginLeft:\"10px\"}}>CIDS</Navbar.Brand>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\" style={categoryStyle}>\n          <NavLink to=\"/dashboard\" style={categoryStyle}>대시보드 </NavLink>\n          <NavLink to=\"/notice\" style={categoryStyle} onClick={() => {window.location.href=\"/notice\"}}>공지사항 </NavLink>\n          <NavLink to=\"/qna\" style={categoryStyle} onClick={() => {window.location.href=\"/qna\"}}> Q & A </NavLink>\n          <NavLink to={{pathname:\"/ranking\"}} style={categoryStyle} >\n            의심 도메인\n          </NavLink>\n          <NavLink to=\"/service\" style={categoryStyle}>CIDS 서비스 </NavLink>\n\n          <NavLink to={{pathname:\"/userlist\"}} style={categoryStyle} >\n            회원들\n          </NavLink>\n\n\n        </Nav>\n        {this.state.loginState ? \n        <Nav inline=\"true\">\n          <NavLink to=\"/user/edit\" style={categoryStyle}>회원정보</NavLink>\n          <Nav.Link variant=\"dark\" onClick={this.logout} style={categoryStyle}>로그아웃</Nav.Link>\n        </Nav>          \n        :\n        <Nav inline=\"true\">\n          <NavLink to=\"/user/join\" style={categoryStyle}>회원가입</NavLink>\n          <Nav.Link variant=\"dark\" onClick={this.handleLoginFormShow} style={categoryStyle}>로그인</Nav.Link>\n          <LoginForm show = {this.state.loginFormShow} showHandler={this.handleLoginFormShow}/>\n        </Nav>\n        }\n\n        \n\n      </Navbar.Collapse>\n    </Navbar>\n    \n    </>\n    )\n  }\n\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\"; \nimport {} from \"../css/home.css\";\n\n\n\nclass HomePage extends Component{\n\n  render(){\n    return(\n    <div>     \n      <Image src=\"./img/home/copyright.jpg\" style={{width:\"100%\" ,height:\"10%\", borderBottom:\"1px solid black\"}}/>\n      <div className=\"hero-text\">\n        <h1 className=\"mt-3 ml-5\">저작권 침해 의심 탐지를 위한 사이트</h1>\n        <h4 className=\"mt-4 ml-5\">CIDS를 이용하여 저작권 침해 의심 사이트를 탐지하고, 저작권을 보호하세요.</h4>\n      </div>\n      <div className=\"text-center\" style={{height: \"50%\"}}>\n        <div id=\"homeText\">\n          <h1 className=\"font-bold mt-5 mb-2\">Copyright Infringement Detection Site</h1>\n          <h6 className=\"font-bold\">아래 서비스를 이용해 보세요.</h6>\n        </div>\n        <div className=\"row mx-5\" style={{marginTop: \"80px\"}}>\n          <div className=\"card home-card col-md-3\" style={{width: \"18rem\"}}>\n            <div className=\"card-body\">\n              <Image className=\"card-img fas mb-4\" style={{width:\"150px\", height:\"120px\"}}  src=\"./img/home/dashboard.png\"/>\n              <h4 className=\"card-title\">Dashboard</h4>\n              <h5 className=\"card-subtitle mt-2 text-muted\">CIDS의 이슈사항을 확인하세요.</h5>\n            </div>\n          </div>\n          <div className=\"card home-card col-md-3\" style={{width: \"18rem\"}}>\n            <div className=\"card-body\">\n              <Image className=\"card-img fas mb-4\" style={{width:\"150px\", height:\"120px\"}}  src=\"./img/category/RankingBoard.PNG\"/>\n              <h4 className=\"card-title\">탐색된 의심 도메인 </h4>\n              <h5 className=\"card-subtitle mt-2 text-muted\">탐색된 의심 도메인을 확인하세요.</h5>\n            </div>\n          </div>\n          <div className=\"card home-card col-md-3\" style={{width: \"18rem\"}}>\n            <div className=\"card-body\">\n              <Image className=\"card-img fas mb-4\" style={{width:\"150px\", height:\"120px\"}} src=\"./img/home/search.jpg\"/>\n              <h4 className=\"card-title\">키워드를 통한 탐지</h4>\n              <h5 className=\"card-subtitle mt-2 text-muted\">저작물 관련 키워드를 입력하세요.</h5>\n            </div>\n          </div>\n          <div className=\"card home-card col-md-3\" style={{width: \"18rem\"}}>\n            <div className=\"card-body\">\n              <Image className=\"card-img fas mb-4\" style={{width:\"150px\", height:\"120px\"}} src=\"./img/home/emailService.png\"/>\n              <h4 className=\"card-title\">이메일 시스템</h4>\n              <h5 className=\"card-subtitle mt-2 text-muted\">의심 리스트를 이메일로 받으세요.</h5>\n            </div>\n          </div>\n        </div>\n        <br/>\n      </div>\n    </div>  \n    );\n  }\n\n}\n\nexport default HomePage;","import React, { Component, useEffect, useState } from \"react\";\nimport { Image, Table, Row, Col } from \"react-bootstrap\";\n// import { Input } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport Moment from 'moment';\n// import ReactPaginate from 'react-paginate';\nimport { } from '../css/pagination.css';\n// import { setIn } from \"immutable\";\n\n\naxios.defaults.withCredentials = true;\n\n\nconst DomainRow = ({ DomainRow, index, currentPage, pageSize }) => {\n\n    const [Domain, setDomain] = useState('');\n    const [Index, setIndex] = useState('');\n    \n\n    useEffect(() => {\n\n        setIndex((currentPage*pageSize)+index);\n        setDomain(DomainRow);\n    \n        \n    }, [DomainRow])\n\n\n\n    const createDateFormat = (date) => {\n        return Moment(date).format('YYYY-MM-DD HH:mm:ss')\n    }\n\n\n    const showRanking = () => {\n        if (Index === 1) {\n          return (<Image src=\"/img/ranking/1.png\" width=\"25\" height=\"30\" />)\n        }\n        else if (Index === 2) {\n          return (<Image src=\"/img/ranking/2.png\" width=\"25\" height=\"30\" />)\n        }\n        else if (Index === 3) {\n          return (<Image src=\"/img/ranking/3.png\" width=\"25\" height=\"30\" />)\n        }\n        else {\n          return Index;\n        }\n      }\n    \n\n\n    return (\n        <>\n            <tr style={{ fontWeight: \"600\" }}>\n                <td style={{ textAlign: \"center\" }}>\n                    {showRanking()}\n                </td>\n\n                <td style={{ textAlign: \"center\", marginTop: \"10px\", paddingTop: \"17px\" }}>\n                    {DomainRow.domain}\n                </td>\n                <td style={{ textAlign: \"center\", marginTop: \"10px\", paddingTop: \"17px\" }}>\n                    {createDateFormat(DomainRow.updateDate)}\n                </td>\n                <td style={{ textAlign: \"center\", marginTop: \"10px\", paddingTop: \"17px\" }}>\n                    {DomainRow.hit}\n                </td>\n            </tr>\n        </>\n    );\n\n\n\n\n\n};\n\nexport default DomainRow;","import React, {  useEffect, useState } from \"react\";\n//https://react.semantic-ui.com/views/comment/#types-comment\nimport 'semantic-ui-css/semantic.min.css';\n// import UserProfileModal from \"../../User/UserProfileModal\";\nimport { } from \"../../css/NewCommentForm.css\";\nimport { } from 'jquery.cookie';\nimport { } from '../../css/userProfile.css';\nimport { } from '../../css/pagination.css';\n// import cogoToast from 'cogo-toast';\n// import { render } from \"@testing-library/react\";\nimport ReactPaginate from 'react-paginate';\n\n\n// const PaginationPostAndComment = ({commentsPerPage, totalComments, paginate}) =>{\nconst PaginationPostAndComment = ({ totalPage , paginate }) => {\n\n    const [totalPages, setTotalPages] = useState('');\n    const pageNumber = [];\n\n    // for(let i = 1; i <= Math.ceil(totalComments / commentsPerPage); i++){\n    //     pageNumber.push(i);\n    // }\n\n    useEffect(() => {\n\n        // setTotalPages(totalPage);\n\n        console.log(totalPage);\n\n        for (let i = 1; i <= totalPage; i++) {\n            console.log(i)\n            pageNumber.push(i);\n        }\n\n        // console.log(totalPages);\n    }, [])\n\n\n    return (\n        <div>\n            <ul className=\"pagination\">\n                {pageNumber.map((pageNum) => (\n                    <li>{pageNum}</li>\n                ))}\n            </ul>\n\n            <ReactPaginate\n                previousLabel={'이전'}\n                nextLabel={'다음'}\n                breakLabel={'...'}//페이지수가 많을 경우 건너 뛸 수 있는 버튼\n                breakClassName={'break-me'}\n                pageCount={(totalPage)}//총 게시글의 수\n                marginPagesDisplayed={0}\n                pageRangeDisplayed={totalPage}//한페이지에 표시할 게시글의 수\n                onPageChange={paginate}//페이지버튼을 눌럿을때 일어나는 이벤트 이를 이용해 페이지 증감\n                containerClassName={'pagination'}//css적용할 때 사용\n                subContainerClassName={'pages pagination'}\n                activeClassName={\"pagination\"}\n                previousClassName={\"pagination\"}\n                nextClassName={\"pagination\"}\n                previousLinkClassName={\"pagination\"}\n                nextLinkClassName={\"pagination\"}\n            />\n\n\n        </div>\n    );\n\n};\n\n\nexport default PaginationPostAndComment;","import React, { Component } from \"react\";\nimport { Image, Table, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { } from '../css/pagination.css';\n\n\nimport DomainRow from \"./DomainRow\";\nimport PaginationPostAndComment from \"../components/Pagination/PaginationPostAndComment\";\n\naxios.defaults.withCredentials = true;\n\n/* Ranking List */\nclass RankingIndex extends Component {\n  state = {\n    domains: [],\n\n    currentPage: 0,\n    totalPages: 0,\n\n    pageSize: 0,\n\n    startIndex: 0,\n\n\n\n    keyword: ''\n  }\n\n\n  //component 시작하면 getRankingIndex 함수 실행\n  componentDidMount() {\n    // this.getRankingIndex('all');\n    this.getRankingIndex(this.state.currentPage);\n  }\n\n  //rank List 가져오는 함수 \n  getRankingIndex = (pageNumber) => {\n\n    let send_params;\n    send_params = {\n      page: pageNumber\n    }\n\n    axios\n      .get(`/domain/ranking`,\n        {\n          params: send_params\n        })\n      .then(res => {\n\n        const totalPages =\n          res.data.totalPages;\n\n        const pageSize = res.data.size;\n\n\n        this.setState({\n          totalPages: totalPages,\n          pageSize: pageSize,\n          currentPage: res.data.number\n        })\n\n        console.log(this.state.currentPage)\n\n        if (res.data.numberOfElements > 0) {\n          const returnedDomains = res.data.content;\n\n          this.setState({\n            domains: returnedDomains\n          })\n        } else {\n          this.state.domains.push([\n            <tr key={0}>\n              <td colSpan=\"4\" style={{ textAlign: \"center\" }}>도메인이 존재하지 않습니다.</td>\n            </tr>\n          ])\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n\n  paginate = (pageNumber) => {\n    this.setState({\n      currentPage: pageNumber.selected\n    })\n    \n\n    // console.log(this.state.currentPage);\n    // console.log(pageNumber);\n    this.forceUpdate();\n\n    this.getRankingIndex(pageNumber.selected);\n    this.forceUpdate();\n\n\n    // window.location.reload();\n  }\n\n  // //search Change 반영\n  // handleKeywordChange = (e) => {\n  //   this.setState({\n  //     keyword: e.target.value\n  //   })\n  // }\n\n  // //enter 반영\n  // handleKeyPress = (e) => {\n  //   if (e.key === \"Enter\") {\n  //     this.getRankingIndex(this.state.keyword);\n  //   }\n  // };\n\n  render() {\n    const divStyle = {\n      marginTop: \"3%\",\n      minWidth: \"70%\",\n      minHeight: \"700px\",\n    };\n\n\n    return (\n      <div className=\"container\" style={divStyle} >\n        <div style={{ marginBottom: \"3%\" }}>\n          <Row>\n            <Col sm={10}>\n              <h2>탐색된 의심 도메인 순위</h2><br />\n            </Col>\n            {/* <Col sm={1}>\n              <Input\n                focus placeholder='Search...'\n                value={this.state.keyword}\n                onChange={this.handleKeywordChange}\n                onKeyPress={this.handleKeyPress}\n              />\n            </Col> */}\n\n          </Row>\n        </div>\n        <div>\n          <Table striped bordered hover>\n            <thead>\n              <tr style={{ textAlign: \"center\" }}>\n                <th style={{ width: \"10%\" }}>Ranking</th>\n                <th style={{ width: \"60%\" }}>Domain</th>\n                <th style={{ width: \"20%\" }}>Last Date</th>\n                <th style={{ width: \"10%\" }}>Hit</th>\n              </tr>\n            </thead>\n              <tbody>\n              {this.state.domains.map((domain, index) => (\n                <DomainRow DomainRow={domain} index={index+1} currentPage = {this.state.currentPage} pageSize = {this.state.pageSize}/>\n              ))}\n            </tbody>\n          </Table>\n\n        </div>\n        <div>\n          <PaginationPostAndComment totalPage={this.state.totalPages} paginate={this.paginate} />\n        </div>\n        {/* <br /><br /><br /> */}\n      </div>\n    );\n  }\n}\n\nexport default RankingIndex;\n","import React, { Component } from \"react\";\nimport { FormControl, Image } from \"react-bootstrap\";\nimport { Button, Form, } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport { } from \"jquery.cookie\";\nimport searchIcon from '../assets/img/search.png'\nimport Typist from 'react-typist';\nimport background from '../assets/img/back.png'\nimport cogoToast from 'cogo-toast';\nimport $ from \"jquery\";\n\n\naxios.defaults.withCredentials = true;\n\nclass ServicePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isPaid: false,\n        }\n    }\n\n    componentDidMount() {\n        this.checkPermission()\n\n    }\n\n    //유저의 결제 권한 확인\n    checkPermission = () => {\n        axios.get('/api/user/checkPermission').then((res) => {\n            if (res.data.message) {\n                cogoToast.error(res.data.message);\n                this.props.history.push(\"/login\");\n                this.setState({\n                    isPaid: false\n                });\n            }\n            else {\n                this.setState({\n                    isPaid: true\n                });\n            }\n        })\n    }\n    notify = () => {\n        cogoToast.success('This is a success message!');\n    }\n\n    search = () => {\n        const keyword = this.keyword.value;\n\n        if (keyword === \"\") {\n            cogoToast.error(\"Keyword를 입력해주세요.\");\n            return;\n        }\n\n        let send_param;\n        send_param = {\n            keyword: keyword\n        }\n\n\n        axios.post(`/detect`, send_param,\n            {\n                headers: {\n                    'Authorization': 'Bearer ' + $.cookie('accessToken')\n                }\n            }).then((res) => {\n                window.location.href = \"/\";\n                cogoToast.success(res.data.message)\n                setTimeout(function () {\n                    window.location.href = \"/\";\n                }, 500);\n            }).catch((e) => {\n                cogoToast.error(e)\n            })\n\n\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.search()\n        }\n    };\n\n\n\n    render() {\n\n        const container = {\n            paddingTop: \"10%\",\n            backgroundImage: `url(${background})`,\n            backgroundColor: 'white',\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat'\n        }\n\n        const titleStyle = {\n            marginTop: \"6%\",\n            marginLeft: \"30%\",\n            marginRight: \"30%\",\n            textAlign: 'center',\n            color: 'white',\n            backgroundColor: '#00ABDF',\n        };\n        const formStyle = {\n            marginTop: \"8%\",\n            width: \"50%\",\n            height: '100%',\n            marginLeft: \"25%\",\n            marginRight: \"25%\",\n            marginBottom: \"20%\",\n            paddingLeft: '2%',\n            paddingRight: '1%',\n            backgroundColor: 'white',\n            border: \"2px solid #00ABDF\",\n            borderRadius: \"20px\",\n        };\n        const formInputStyle = {\n            marginTop: '5px',\n            marginBottom: '5px',\n            width: '100%',\n            height: '40px',\n            border: \"0px\",\n            backgroundColor: 'rgba(256,256,256,0.3)',\n            textAlign: 'center'\n        }\n        const buttonStyle = {\n            marginTop: '5px',\n            marginBottom: '5px',\n            height: '40px',\n            backgroundColor: 'rgba(256,256,256,0.2)'\n        }\n        const iconStyle = {\n            marginTop: '10px',\n            marginBottom: '10px',\n            height: '30px',\n        }\n\n        return (\n            <div className=\"full-height\" style={container}>\n                <div style={titleStyle}>\n                    <h1>\n                        <Typist>\n                            Copyright Infringement Detection Site\n                        </Typist>\n                    </h1>\n                </div>\n                <Form>\n                    <Form.Group style={formStyle}>\n                        <Image src={searchIcon} style={iconStyle} />\n                        <FormControl style={formInputStyle}\n                            ref={ref => (this.keyword = ref)}\n                            onKeyPress={this.handleKeyPress}\n                            placeholder=\"keyword ( 추천: Keyword 무료보기, Keyowrd 다시보기 )\"></FormControl>\n                        <Button\n                            onClick={this.search}\n                            type=\"button\"\n                            style={buttonStyle}>\n                            GO\n                        </Button>\n                    </Form.Group>\n\n                </Form>\n            </div>\n        )\n    }\n}\n\n\nexport default ServicePage;\n\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    padding: \"0 15px !important\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridItem(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid item {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    margin: \"0 -15px !important\",\n    width: \"unset\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridContainer(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node\n};\n","/*!\n\n =========================================================\n * Material Dashboard React - v1.9.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2020 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = input => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase();\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    \", \" +\n    parseInt(second, 16) +\n    \", \" +\n    parseInt(last, 16)\n  );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\n\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\"\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\n\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\nconst grayColor = [\n  \"#999\",\n  \"#777\",\n  \"#3C4858\",\n  \"#AAAAAA\",\n  \"#D2D2D2\",\n  \"#DDD\",\n  \"#b4b4b4\",\n  \"#555555\",\n  \"#333\",\n  \"#a9afbb\",\n  \"#eee\",\n  \"#e7e7e7\"\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 4px 25px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\"\n};\n\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(primaryColor[0]) +\n    \",.4)\"\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(infoColor[0]) +\n    \",.4)\"\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(successColor[0]) +\n    \",.4)\"\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(warningColor[0]) +\n    \",.4)\"\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(dangerColor[0]) +\n    \",.4)\"\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(roseColor[0]) +\n    \",.4)\"\n};\n\nconst warningCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n  ...primaryBoxShadow\n};\nconst roseCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n  ...roseBoxShadow\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid \" + grayColor[10],\n  height: \"auto\",\n  ...defaultFont\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 3px 20px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\n\nconst title = {\n  color: grayColor[2],\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: grayColor[1],\n    fontWeight: \"400\",\n    lineHeight: \"1\"\n  }\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\"\n  }\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\"\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\n\nexport {\n  hexToRgb,\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  blackColor,\n  whiteColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink\n};\n","import {\n  blackColor,\n  whiteColor,\n  hexToRgb\n} from \"../../material-dashboard-react.js\";\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"30px\",\n    marginTop: \"30px\",\n    borderRadius: \"6px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor,\n    width: \"100%\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\"\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\"\n  },\n  cardProfile: {\n    marginTop: \"30px\",\n    textAlign: \"center\"\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\"\n    }\n  }\n};\n\nexport default cardStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Card(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, chart, ...rest } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined\n\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  whiteColor\n} from \"../../material-dashboard-react.js\";\n\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: whiteColor\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\n    },\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\"\n      }\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\"\n    },\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\",\n      overflow: \"unset\",\n      marginBottom: \"1px\"\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\"\n    }\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\"\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\"\n    }\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"& i,& .material-icons\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\"\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\"\n    }\n  },\n  warningCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader\n    }\n  },\n  successCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader\n    }\n  },\n  dangerCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader\n    }\n  },\n  infoCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader\n    }\n  },\n  primaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader\n    }\n  },\n  roseCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader\n    }\n  }\n};\n\nexport default cardHeaderStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardHeader(props) {\n  const classes = useStyles();\n  const { className, children, color, plain, stats, icon, ...rest } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  grayColor\n} from \"../../material-dashboard-react.js\";\n\nconst cardIconStyle = {\n  cardIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      borderRadius: \"3px\",\n      backgroundColor: grayColor[0],\n      padding: \"15px\",\n      marginTop: \"-20px\",\n      marginRight: \"15px\",\n      float: \"left\"\n    }\n  },\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader\n};\n\nexport default cardIconStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardIconStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardIcon(props) {\n  const classes = useStyles();\n  const { className, children, color, ...rest } = props;\n  const cardIconClasses = classNames({\n    [classes.cardIcon]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardIconClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardIcon.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  children: PropTypes.node\n};\n","const cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\"\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\"\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\"\n  }\n};\n\nexport default cardBodyStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node\n};\n","import { grayColor } from \"../../material-dashboard-react.js\";\n\nconst cardFooterStyle = {\n  cardFooter: {\n    padding: \"0\",\n    paddingTop: \"10px\",\n    margin: \"0 15px 10px\",\n    borderRadius: \"0\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    display: \"flex\",\n    backgroundColor: \"transparent\",\n    border: \"0\"\n  },\n  cardFooterProfile: {\n    marginTop: \"-15px\"\n  },\n  cardFooterPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    backgroundColor: \"transparent\"\n  },\n  cardFooterStats: {\n    borderTop: \"1px solid \" + grayColor[10],\n    marginTop: \"20px\",\n    \"& svg\": {\n      position: \"relative\",\n      top: \"4px\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n      width: \"16px\",\n      height: \"16px\"\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      fontSize: \"16px\",\n      position: \"relative\",\n      top: \"4px\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\"\n    }\n  },\n  cardFooterChart: {\n    borderTop: \"1px solid \" + grayColor[10]\n  }\n};\n\nexport default cardFooterStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardFooterStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardFooter(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, stats, chart, ...rest } = props;\n  const cardFooterClasses = classNames({\n    [classes.cardFooter]: true,\n    [classes.cardFooterPlain]: plain,\n    [classes.cardFooterProfile]: profile,\n    [classes.cardFooterStats]: stats,\n    [classes.cardFooterChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardFooterClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardFooter.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  stats: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  successColor,\n  whiteColor,\n  grayColor,\n  hexToRgb\n} from \"../../material-dashboard-react.js\";\n\nconst dashboardStyle = {\n  successText: {\n    color: successColor[0]\n  },\n  upArrowCardCategory: {\n    width: \"16px\",\n    height: \"16px\"\n  },\n  stats: {\n    color: grayColor[0],\n    display: \"inline-flex\",\n    fontSize: \"12px\",\n    lineHeight: \"22px\",\n    \"& svg\": {\n      top: \"4px\",\n      width: \"16px\",\n      height: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\"\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      top: \"4px\",\n      fontSize: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\"\n    }\n  },\n  cardCategory: {\n    color: grayColor[0],\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    paddingTop: \"10px\",\n    marginBottom: \"0\"\n  },\n  cardCategoryWhite: {\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitle: {\n    color: grayColor[2],\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  cardTitleWhite: {\n    color: whiteColor,\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nexport default dashboardStyle;\n","import React, {Component, useEffect, useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Search from '@material-ui/icons/Search';\nimport Person from '@material-ui/icons/Person';\nimport Location from '@material-ui/icons/LocationSearching';\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport { TableSimple } from 'react-pagination-table';\nimport GridItem from \"./Grid/GridItem.js\";\nimport GridContainer from \"./Grid/GridContainer.js\";\nimport Card from \"./Card/Card.js\";\nimport CardHeader from \"./Card/CardHeader.js\";\nimport CardIcon from \"./Card/CardIcon.js\";\nimport CardBody from \"./Card/CardBody.js\";\nimport CardFooter from \"./Card/CardFooter.js\";\nimport axios from \"axios\";\n\nimport styles from \"../assets/jss/material-dashboard-react/views/dashboardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\n\nexport default function Dashboard(d) {\n    const [totalKeywordCount, setTotalKeywordCount] = useState(0);\n    const [totalUserCount, setTotalUserCount] = useState(0);\n    const [averageAccuracy, setAverageAccuracy] = useState(0);\n    const [searchKeywordTop, setSearchKeywordTop] = useState([]);\n    const [domainTop, setDomainTop] = useState([]);\n\n\n    useEffect(()=>{\n        getDashBoard();\n    },[totalKeywordCount])\n\n\n    const classes = useStyles();\n    const dashStyle = {\n        marginTop: \"3%\",\n        marginLeft: \"10%\",\n        marginRight: \"10%\"\n    };\n\n    const chart_data =  {\n        labels: d.search_dates,\n       series: [d.search_counts]\n    }\n\n\n    const getDashBoard = () =>{\n\n        axios.get(`/dashboard`)\n        .then(res =>{\n            \n            setTotalKeywordCount(res.data.data.keywordCount);\n            setTotalUserCount(res.data.data.memberCount);\n            setAverageAccuracy(res.data.data.averageAccuracy);\n            setSearchKeywordTop(res.data.data.searchKeywords);\n            setDomainTop(res.data.data.domains);\n\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n\n    }\n\n    const getDate = () =>{\n        let now = new Date();\n        let todayMonth = now.getMonth() + 1;\n        let todayDate = now.getDate();\n        let todayYear = now.getFullYear();\n        \n        return todayYear+\"년 \"+todayMonth+\"월 \"+todayDate+\"일 기준\"\n    }\n\n\n    return (\n\n        <div style={dashStyle}>\n            <GridContainer>\n                <GridItem xs={12} sm={6} md={4}>\n                    <Card>\n                        <CardHeader color=\"info\" stats icon>\n                            <CardIcon color=\"info\">\n                                <Search/>\n                            </CardIcon>\n                            <p className={classes.cardCategory}>총 키워드 검색 수</p>\n                            <h3 className={classes.cardTitle}>{totalKeywordCount}<small>개</small></h3>\n\n                        </CardHeader>\n                        <CardFooter stats>\n                            { d.today_keyword_count?\n                                <div className={classes.stats}>\n                                    <Update />\n                                    updated few seconds ago\n                                </div>\n                                :\n                                <div className={classes.stats}>\n                                    -\n                                </div>\n                            }\n                        </CardFooter>\n                    </Card>\n                </GridItem>\n                <GridItem xs={12} sm={6} md={4}>\n                    <Card>\n                        <CardHeader color=\"success\" stats icon>\n                            <CardIcon color=\"success\">\n                                <Person />\n                            </CardIcon>\n                            <p className={classes.cardCategory}>CIDS서비스 이용 수</p>\n                            <h3 className={classes.cardTitle}>{totalUserCount}<small>명</small></h3>\n\n                        </CardHeader>\n                        <CardFooter stats>\n                            <div className={classes.stats}>\n                                <ArrowUpward/>\n                            </div>\n\n                        </CardFooter>\n                    </Card>\n                </GridItem>\n                <GridItem xs={12} sm={6} md={4}>\n                    <Card>\n                        <CardHeader color=\"danger\" stats icon>\n                            <CardIcon color=\"danger\">\n                                <Location/>\n                            </CardIcon>\n                            <p className={classes.cardCategory}>평균 정확도</p>\n                            <h3 className={classes.cardTitle}>{averageAccuracy}<small>%</small></h3>\n\n\n                        </CardHeader>\n                        <CardFooter stats>\n                            { d.accuracy?\n                                <div className={classes.stats}>\n                                    <Update />\n                                    updated few seconds ago\n                                </div>\n                                :\n                                <div className={classes.stats}>\n                                    -\n                                </div>\n                            }\n\n                        </CardFooter>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n            <GridContainer>\n            <GridItem xs={12} sm={12} md={5}>\n                    <Card>\n                        <CardHeader color=\"warning\">\n                            <h4 className={classes.cardTitleWhite}>검색 키워드 Top 5</h4>\n                        </CardHeader>\n                        <CardBody>\n                            <div className={classes.stats}>\n                                {getDate()}\n                            </div>\n                            <TableSimple\n                                headers={['Rank', 'Keyword']}\n                                data={searchKeywordTop}\n                                columns=\"rank.keyword\"\n                            />\n                        </CardBody>\n                    </Card>\n                </GridItem>\n\n                <GridItem xs={12} sm={12} md={5}>\n                    <Card>\n                        <CardHeader color=\"warning\">\n                            <h4 className={classes.cardTitleWhite}>검출된 도메인 Top 5</h4>\n                        </CardHeader>\n                        <CardBody>\n                            <div className={classes.stats}>\n                                {getDate()}\n                            </div>\n                            <TableSimple\n                                headers={['Rank', 'Domain']}\n                                data={domainTop}\n                                columns=\"rank.domain\"\n                                arrayOption={ [[\"rank\", 'domain']] }\n                            />\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n        </div>\n    );\n}\n","import React, {Component} from \"react\";\nimport Dashboard from \"../components/Dashboard\";\nimport axios from \"axios\";\n\nclass DashboardPage extends Component {\n    state = {\n        domains:[],\n        today_user_count : 0,\n        total_user_count : 0,\n        today_keyword_count : 0,\n        search_dates : [],\n        search_counts : [],\n        accuracy : 0,\n    }\n\n    getKeywordCount = () =>{\n        axios.get(`/api/dashboard/keywordinfo`)\n            .then(res =>{\n                if(res.data.keyword_count){\n                    this.setState({\n                        today_keyword_count : res.data.keyword_count,\n                    });\n                }\n                else{\n                    this.setState({\n                        today_keyword_count : 0,\n                    });\n                }\n            })\n    }\n\n    getUserCount = () =>{\n        axios.get(`/api/dashboard/userinfo`)\n            .then(res =>{\n                if(res.data){\n                    this.setState({\n                        total_user_count : res.data.total_cnt,\n                        today_user_count : res.data.today_cnt\n                    });\n                }\n                else{\n                    this.setState({\n                        total_user_count : 0,\n                        today_user_count : 0\n                    });\n                }\n            })\n    }\n\n    getDomainList = () => {\n        axios\n            .get(`/api/dashboard/domain`)\n            .then(res => {\n                if (res.data.domains.length > 0) {\n                    const domain_list = res.data.domains.slice(0,5);\n                    this.setState({\n                        domains: domain_list\n                    });\n                }\n                else{\n                    this.setState({\n                        domains: []\n                    });\n                }\n            })\n    }\n\n    getAccuracy = () =>{\n        axios\n            .get(`/api/dashboard/accuracy`)\n            .then(res=>{\n                if(res.data.accuracy){\n                    this.setState({\n                        accuracy: res.data.accuracy\n                    })\n                }\n                else{\n                    this.setState({\n                        accuracy: 0\n                    })\n                }\n            })\n    }\n\n    getDomainSearchInfo = () =>{\n        axios\n            .get(`/api/dashboard/domaininfo`)\n            .then(res => {\n                this.setState({\n                    search_dates: res.data.search_dates,\n                    search_counts: res.data.search_counts,\n                });\n            })\n    }\n\n    componentDidMount() {\n        this.getKeywordCount()\n        this.getUserCount()\n        this.getDomainList()\n        this.getAccuracy()\n        this.getDomainSearchInfo()\n\n        this.interval = setInterval(()=>{\n            this.getKeywordCount()\n            this.getUserCount()\n            this.getDomainList()\n            this.getAccuracy()\n            this.getDomainSearchInfo()\n        }, 60000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div>\n                <Dashboard\n                    domains={this.state.domains}\n                    today_user_count={this.state.today_user_count}\n                    total_user_count={this.state.total_user_count}\n                    today_keyword_count = {this.state.today_keyword_count}\n                    search_dates = {this.state.search_dates}\n                    search_counts = {this.state.search_counts}\n                    accuracy = {this.state.accuracy}\n                ></Dashboard>\n            </div>\n        );\n    }\n}\n\nexport default DashboardPage;","import React, { Component } from \"react\";\nimport {} from \"./css/404page.css\";\n\n\n\nclass InvalidPage extends Component{\n\n  render(){\n    return(\n    <div id=\"notfound\">\n      <div class=\"notfound\">\n        <div class=\"notfound-404\"></div>\n        <h1>404</h1>\n        <h2>Oops! Page Not Be Found</h2>\n        <p>Sorry but the page you are looking for does not exist, have been removed. name changed or is temporarily unavailable</p>\n        <a href=\"/\">Back to homepage</a>\n      </div>\n    </div>\n    );\n  }\n\n}\n\nexport default InvalidPage;","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {} from \"jquery.cookie\";\nimport cogoToast from \"cogo-toast\"; //로그인, 로그아웃 처리 (쿠키값이 있으면 게시글 보여주고, 쿠키값 없으면 회원가입, 로그인 보여줌)\naxios.default.withCredentials = true; // node.js server와 통신 구현 -> 동일 기원(host)가 아니여도 접근할 수 있도록 구현 \n\nclass JoinForm extends Component {\n  //회원가입\n  join = () => {\n    const joinId = this.joinId.value;\n    const joinEmail = this.joinEmail.value;\n    const joinName = this.joinName.value;\n    const joinPw = this.joinPw.value;\n    const telphone = this.telphone.value;\n\n\n    const telPhoneRegExp = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n    const idRegExp = /^[0-9a-zA-Z]{4,15}$/; \n    const emailRegExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    const pwRegExp = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\n    \n    if (joinId === \"\" || joinId === undefined) {\n      cogoToast.warn(\"가입할 아이디를 입력해주세요.\");\n      this.joinId.focus();\n      return;\n    } \n    else if (\n      joinId.match(idRegExp) === null ||joinId.match(idRegExp) === undefined) {\n      cogoToast.warn(\"아이디 형식에 맞게 입력해주세요.\");\n      this.joinId.value = \"\";\n      this.joinId.focus();\n      return;\n    }\n    \n    if (joinEmail === \"\" || joinEmail === undefined) {\n      cogoToast.warn(\"이메일 주소를 입력해주세요.\");\n      this.joinEmail.focus();\n      return;\n    } \n    else if (\n      joinEmail.match(emailRegExp) === null ||joinEmail.match(emailRegExp) === undefined) {\n      cogoToast.warn(\"이메일 형식에 맞게 입력해주세요.\");\n      this.joinEmail.value = \"\";\n      this.joinEmail.focus();\n      return;\n    } \n    \n    if (joinName === \"\" || joinName === undefined) {\n      cogoToast.warn(\"이름을 입력해주세요.\");\n      this.joinName.focus();\n      return;\n    }\n\n    if (joinPw === \"\" || joinPw === undefined) {\n      cogoToast.warn(\"비밀번호를 입력해주세요.\");\n      this.joinPw.focus();\n      return;\n    } \n    else if ( joinPw.match(pwRegExp) === null || joinPw.match(pwRegExp) === undefined) {\n      cogoToast.warn(\"비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\n      this.joinPw.value = \"\";\n      this.joinPw.focus();\n      return;\n    }\n\n    if(telphone.match(telPhoneRegExp) === null || telphone.match(telPhoneRegExp) === undefined){\n      cogoToast.warn(\"핸드폰 형식을 맞게 입력해주세요.\");\n      this.telphone.value = \"\";\n      this.telphone.focus();\n      return;\n    }\n\n    const send_param = {\n      loginId: joinId,\n      email: joinEmail,\n      name: joinName,\n      password: joinPw,\n      telephone: telphone\n    };\n    axios\n      .post(\"/register\", send_param)\n      //정상 수행\n      .then(returnData => {\n        \n        //Id 중복 체크\n        if (returnData.data.dupLoginIdCheck) {\n          cogoToast.error(returnData.data.message);\n          this.joinId.value = \"\";\n          this.joinId.focus();\n        }\n        //이메일 중복 체크\n        else if (returnData.data.dupEmailCheck){\n          cogoToast.error(returnData.data.message);\n          this.joinEmail.value = \"\";\n          this.joinEmail.focus();\n        }\n        //home으로 보내야함\n        else {\n          // cogoToast.success(returnData.data.message);\n          window.location.href = \"/\";\n        }\n        \n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const formStyle = {\n      width: \"80%\"\n    };\n    const buttonStyle = {\n      marginTop: 10\n    };\n    const centerStyle ={\n      marginLeft: \"15%\",\n      marginRight: \"15%\",\n      border:\"solid 1px gray\",\n      backgroundColor:\"#FFFFFF\"\n    }\n\n    return (\n    <div style={{backgroundColor:\"#edf1f1\"}} >\n      <center style={centerStyle }>\n      <h1 style={{marginTop:\"3%\"}}>회원가입</h1>\n      <Form  style={formStyle}>\n        <Form.Group controlId=\"joinId\">\n          <Form.Label>ID</Form.Label>\n          <Form.Control\n            type=\"id\"\n            maxLength=\"30\"\n            ref={ref => (this.joinId = ref)}\n            placeholder=\"ID ( 숫자와 문자포함 4~15 자리 ) (필수)\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"joinPw\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            maxLength=\"64\"\n            ref={ref => (this.joinPw = ref)}\n            placeholder=\"Password (필수)\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"joinEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            maxLength=\"100\"\n            ref={ref => (this.joinEmail = ref)}\n            placeholder=\"Enter email (필수)\"\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"joinName\">\n          <Form.Label>name</Form.Label>\n          <Form.Control\n              type=\"text\"\n              maxLength=\"20\"\n              ref={ref => (this.joinName = ref)}\n              placeholder=\"name\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"joinTelPhone\">\n          <Form.Label>telphone</Form.Label>\n          <Form.Control\n            type=\"text\"\n            maxLength=\"20\"\n            ref={ref => (this.telphone = ref)}\n            placeholder=\"telphone (형식: xxx-xxxx-xxxx)\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"joinBtn\">\n          <Button\n            style={buttonStyle}\n            onClick={this.join}\n            variant=\"dark\"\n            type=\"button\"\n            block\n          >\n            회원가입\n          </Button>\n        </Form.Group>\n      </Form>\n      <br/>\n      </center>\n    </div>\n    );\n  }\n}\n\nexport default JoinForm;\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\nimport cogoToast from \"cogo-toast\";\naxios.defaults.withCredentials = true;\n\nclass PwChangeModalForm extends Component {\n  \n  state = {\n    show: false,\n  }\n  \n  componentDidMount() {\n    this.setState({\n      show: this.props.show\n    });\n  }\n  \n\n  //비밀번호 변경\n  pwChange = () => {\n    const currentPw = this.currentPw.value;\n    const newPw = this.newPw.value;\n    const pwRegExp = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\n    const confirmNewPw = this.confirmNewPw.value;\n\n    if (currentPw === \"\" || currentPw === undefined) {\n      cogoToast.warn(\"현재 비밀번호를 입력해주세요.\");\n      this.currentPw.focus();\n      return;\n    } \n    else if (newPw === \"\" || newPw === undefined) {\n      cogoToast.warn(\"새로운 비밀번호를 입력해주세요.\");\n      this.newPw.focus();\n      return;\n    } \n    else if (confirmNewPw === \"\" || confirmNewPw === undefined) {\n      cogoToast.warn(\"새로운 비밀번호 확인을 입력해주세요.\");\n      this.confirmNewPw.focus();\n      return;\n    }\n    if (newPw.match(pwRegExp) === null || newPw.match(pwRegExp) === undefined )\n    {\n      cogoToast.warn(\"새로운 비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\n      this.newPw.value = \"\";\n      this.confirmNewPw = \"\";\n      this.newPw.focus();\n      return;\n    }\n    \n    \n    if (confirmNewPw !== newPw){\n      cogoToast.warn(\"새로운 비밀번호가 새로운 비밀번호 확인과 다릅니다. 새로운 비밀번호 확인을 다시 입력해주세요!\");\n      this.confirmNewPw.value = '';\n      this.confirmNewPw.focus();\n      return;\n    }\n\n    const send_param = {\n      //headers,\n      currentPw: this.currentPw.value,\n      newPassword: this.newPw.value\n    };\n    axios\n      .put(`/members/me/password`, send_param,\n      {\n        headers:{\n          'Authorization': 'Bearer ' + $.cookie('accessToken')\n        }\n\n      })\n      //정상 수행\n      .then(response => {\n        if (response.status===200) {\n          cogoToast.success(response.data.message);\n          this.setState({\n            show: false\n          });\n          this.props.showHandler();\n          \n        } \n        else {\n          cogoToast.warn(response.data.message);\n          this.currentPw.value = '';\n          this.newPw.value = '';\n          this.confirmNewPw.value = '';\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      this.pwChange();\n    }\n  };\n\n  render() {\n    const buttonStyle = {\n      marginTop: 10\n    };\n\n    return (\n      <Modal show={this.props.show} onHide={this.props.showHandler}>\n      <Modal.Header closeButton>\n      <Modal.Title>비밀번호 변경</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <Form className=\"container\">\n        <Form.Group>\n          <Form.Label>현재 비밀번호</Form.Label>\n          <Form.Control\n            type=\"password\"\n            maxLength=\"20\"\n            ref={ref => (this.currentPw = ref)}\n            placeholder=\"Enter Current Password\"\n            onKeyPress={this.handleKeyPress}\n          />\n          <br/>\n          <Form.Label>새로운 비밀번호</Form.Label>\n          <Form.Control\n            type=\"password\"\n            maxLength=\"20\"\n            ref={ref => (this.newPw = ref)}\n            placeholder=\"Enter New Password\"\n            onKeyPress={this.handleKeyPress}\n          />\n          <br/>\n          <Form.Label>새로운 비밀번호 확인</Form.Label>\n          <Form.Control\n            type=\"password\"\n            maxLength=\"20\"\n            ref={ref => (this.confirmNewPw = ref)}\n            placeholder=\"Enter New Password Confirm\"\n            onKeyPress={this.handleKeyPress}\n          />\n          <br/>\n          <Button\n            style={buttonStyle}\n            onClick={this.pwChange}\n            variant=\"dark\"\n            type=\"button\"\n            block\n          >\n            비밀번호 변경\n          </Button>\n        </Form.Group>\n      </Form>\n      </Modal.Body>\n      </Modal>\n     \n    );\n  }\n}\n\nexport default PwChangeModalForm;","import React, {Component} from \"react\";\nimport {} from \"react-bootstrap\";\nimport {Button, Grid,Card,Form, Segment, Image, Placeholder  } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\nimport PwChangeModalForm from \"./PwChangeModal\";\nimport ImageUploader from \"react-images-upload\";\nimport cogoToast from \"cogo-toast\";\naxios.defaults.withCredentials = true;\n\nclass UserPageForm extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name: '',\n      loginId: '',\n      role: '',\n      telephone: '',\n      email: '',\n      pictures: [],\n      imgPath: '',\n      s3_url: 'https://s3.ap-northeast-2.amazonaws.com/cidsprofileimg/',\n      pwChangeModalShow: false,\n      userDeleteModalShow: false,\n      hidden: '',\n    }\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  //비번 변경 modal\n  handlePwChangeModalShow = () =>{\n    this.setState({\n      pwChangeModalShow: !this.state.pwChangeModalShow\n    });\n  \n  }\n\n  //사진 업로드 Func\n  async onDrop(pictureFiles, pictureDataURLs) {\n    try{\n      await this.setState({\n        pictures: this.state.pictures.concat(pictureFiles)\n      });\n      this.fileUploadHandler();\n    }\n    catch(err){\n      console.log(err);\n    }\n    \n  }\n\n  //사진 업로드\n  fileUploadHandler = async () => {\n    try{\n      const data = new FormData();\n      await data.append('upload',this.state.pictures[0]); //key value 저장 후 전송\n      // await data.append('filename',this.state.pictures[0].name);\n      console.log(data);\n\n      axios.post(`/members/image`, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': 'Bearer ' + $.cookie('accessToken')\n        }})\n      .then( response => { //응답받은 url 저장\n          this.setState({\n            // imgPath: this.state.s3_url + response.data.img_path\n            imgPath: response.data.data.imageUrl\n          });\n          this.setState({\n            pictures: []\n          });\n          console.log(response.data.data.imageUrl);\n      });\n      return;\n    } catch (err){\n\n    }\n   \n  }\n\n  componentDidMount(){\n    this.getUserInfo();\n  }\n\n  //user 정보 가져오기\n  getUserInfo = () => {\n\n    axios\n      .get(\"/members/me\", {     \n            headers: {\n              'Authorization': 'Bearer ' + $.cookie('accessToken')\n            },\n            withCredentials: true\n          })\n      .then((response) =>{\n        if(response.status===200){\n          let user = response.data.data;\n          this.setState({\n            name: user.name,\n            role: user.role,\n            telephone: user.telephone,\n            email: user.email,\n            loginId: user.loginId,\n            imgPath: user.imgUri\n            // imgPath: this.state.s3_url + user.img_path\n\n          });          \n        }\n        else{\n          cogoToast.error(\"유저정보 조회가 실패했습니다.\");\n          window.location.href = '/';\n        }\n        \n      })\n      .catch( err => {\n        console.log(err);\n        window.location.href = '/';\n      })\n  }\n\n  //change 체크\n  handleTelephoneChange = (e) =>{\n    this.setState({\n      telephone: e.target.value\n    });\n  }\n\n  handleEmailChange = (e) =>{\n    this.setState({\n      email: e.target.value\n    })\n  }\n\n  handleHidden = (e) =>{\n    this.setState({\n      hidden: e.target.value\n    })\n  }\n\n  handleNameChange = (e) =>{\n    this.setState({\n      name: e.target.value\n    })\n  }\n  userInfoUpdate = () =>{\n\n    const telePhoneRegExp = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n    const emailRegExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    \n    if (this.state.email === \"\") {\n      cogoToast.warn(\"이메일 주소를 입력해주세요.\");\n      return;\n    } \n    else if (this.state.email.match(emailRegExp) === null ||this.state.email.match(emailRegExp) === undefined) {\n      cogoToast.warn(\"이메일 형식에 맞게 입력해주세요.\");\n      this.setState({\n        email: \"\"\n      });\n      return;\n    }\n\n    if(this.state.telephone.match(telePhoneRegExp) === null || this.state.telephone.match(telePhoneRegExp) === undefined){\n      cogoToast.warn(\"핸드폰 형식을 맞게 입력해주세요.\");\n      this.setState({\n        telephone: \"\"\n      });\n      return;\n    }\n    \n    const send_param = {\n      name: this.state.name,\n      telephone: this.state.telephone,\n      email: this.state.email,\n      loginId: this.state.loginId,\n      role: this.state.role\n    }\n\n    axios\n      .put(`/members/me/update`, send_param,\n      {\n        headers: {\n          'Authorization': 'Bearer ' + $.cookie('accessToken')\n        }\n      }\n        )\n        .then((response) => {\n          if(response.status === 200){\n            cogoToast.success(response.data.message,{\n              onClick:()=>{\n                window.location.href = '/user/edit';\n              }\n            });\n          }\n          else{\n            cogoToast.warn(response.data.message);\n          }\n        })\n        .catch( (err) => {\n          console.log(err);\n          cogoToast.error(\"유저정보 업데이트에 실패했습니다.\");\n          window.location.href = '/';\n        });\n  }\n\n  //유저 탈퇴 루틴 \n  userDeleteCheck = () =>{\n    if(window.confirm('정말 회원탈퇴를 하시겠습니까?')){\n      this.userDelete();\n    }\n    else{\n      return;\n    }\n  }\n\n  userDelete = () => {\n    axios\n      .delete(`/uesr/me`)\n        .then((response) => {\n          if(response.data.message){\n            $.removeCookie(\"login_id\");\n            $.removeCookie(\"token\");\n            cogoToast.success(\"회원탈퇴에 성공했습니다.\");\n            setTimeout(function() {\n              window.location.href=\"/\";\n            }, 1000);\n          }\n        })\n        .catch( (err) => {\n          //console.log(err);\n          cogoToast.error(\"회원탈퇴에 실패했습니다.\");\n          return;\n        });\n\n  }\n\n  onChange = (e) => {\n    this.setState({\n      retained_star: e.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n      \n        <center>\n        <Segment style={{marginBottom: \"20px\", marginTop: \"20px\", width: \"80%\" }}>\n      \n                <Grid doubling columns={2} style={{marginBottom:\"3%\",marginTop:\"3%\"}}>\n                  <Grid.Column>\n                  <Card key={this.state.name} style={{width:\"280px\"}} >\n                    <Image src={this.state.imgPath} style={{height: \"280px\", width: \"280px\"}}/>\n                    <Placeholder>\n                      <Card.Description>User Image</Card.Description>\n                    </Placeholder>\n                    <Card.Content>\n                      <ImageUploader\n                              withIcon={false}\n                              buttonText=\"유저 이미지 변경\"\n                              onChange={this.onDrop}\n                              imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n                              maxFileSize={5242880}\n                              withLabel={false}\n                              singleImage ={true}\n                            />\n                    </Card.Content>\n                     \n                  </Card>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Form>\n                      <Form.Group widths={2}>\n                        <Form.Input label=\"name\" name=\"name\"type=\"text\" value={this.state.name} readOnly={true}/>\n                      </Form.Group>\n                      <Form.Group widths={2}>\n                        <Form.Input  label=\"email\" name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleEmailChange} />\n                        <Form.Input label=\"role\" name=\"role\" type=\"text\" value={this.state.role} readOnly={true}/>\n                      </Form.Group>\n                <Form.Group widths={2}>\n                  <Form.Input label=\"telephone\" name=\"telephone\" type=\"text\"  value={this.state.telephone} onChange={this.handleTelephoneChange}/>\n                </Form.Group>\n                <Button onClick={this.handlePwChangeModalShow} active>\n                  비밀번호 변경\n                </Button>\n                <Button onClick={this.userInfoUpdate} active>\n                  회원정보 수정\n                </Button>\n                <Button onClick={this.userDeleteCheck} active>\n                  회원 탈퇴\n                </Button>\n                </Form>\n                </Grid.Column>\n                </Grid>\n          </Segment>\n          <PwChangeModalForm show = {this.state.pwChangeModalShow} showHandler={this.handlePwChangeModalShow}/>\n        </center>\n      </div>\n    );\n  };\n}\nexport default UserPageForm;\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport cogoToast from 'cogo-toast';\nimport {Button, Form} from \"react-bootstrap\";\n\nclass LoginPage extends Component {\n    componentDidMount() {\n\n    }\n\n    //로그인\n    login = () => {\n        const loginId = this.loginId.value;\n        const loginPw = this.loginPw.value;\n\n        if (loginId === \"\" || loginId === undefined) {\n            cogoToast.warn(\"아이디를 입력해주세요.\");\n            this.loginId.focus();\n            return;\n        } else if (loginPw === \"\" || loginPw === undefined) {\n            cogoToast.warn(\"비밀번호를 입력해주세요.\");\n            this.loginPw.focus();\n            return;\n        }\n\n        const send_param = {\n            //headers,\n            login_id: this.loginId.value,\n            passwd: this.loginPw.value\n        };\n        axios\n            .post(\"/api/user/login\", send_param)\n            //정상 수행\n            .then(response => {\n                if (response.data.token) {\n\n                    // expire 3시간으로 설정\n                    $.cookie(\"token\", response.data.token, { expires: 0.125});\n                    $.cookie(\"login_id\", response.data.loginId, { expires: 0.125});\n\n                    axios.defaults.headers.common['x-access-token'] = response.data.token;\n                    cogoToast.success(\"로그인에 성공했습니다.\");\n                    window.location.href=\"/\";\n                }\n                else {\n                    cogoToast.error(response.data.message);\n                    this.loginId.value = \"\";\n                    this.loginPw.value = \"\";\n                }\n            })\n            //에러\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    handleKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.login();\n        }\n    };\n\n\n    render(){\n\n        const formStyle = {\n            width: \"80%\"\n        };\n        const buttonStyle = {\n            marginTop: 30\n        };\n        const centerStyle ={\n            paddingTop: \"10%\",\n            marginLeft: \"15%\",\n            marginRight: \"15%\",\n            paddingBottom: \"10%\",\n            backgroundColor:\"#FFFFFF\"\n        }\n\n        return (\n            <div style={{backgroundColor:\"#edf1f1\"}} >\n                <center style={centerStyle }>\n                    <h1 style={{marginTop:\"3%\", marginBottom:\"5%\"}}>로그인</h1>\n                    <Form  style={formStyle}>\n                        <Form.Group controlId=\"loginId\">\n                            <Form.Label>ID</Form.Label>\n                            <Form.Control\n                                type=\"id\"\n                                maxLength=\"30\"\n                                ref={ref => (this.loginId = ref)}\n                                placeholder=\"ID\"\n                                onKeyPress={this.handleKeyPress}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"loginPw\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                maxLength=\"64\"\n                                ref={ref => (this.loginPw = ref)}\n                                placeholder=\"Password\"\n                                onKeyPress={this.handleKeyPress}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"joinBtn\">\n                            <Button\n                                style={buttonStyle}\n                                onClick={this.login}\n                                variant=\"dark\"\n                                type=\"button\"\n                                block\n                            >\n                                로그인\n                            </Button>\n                        </Form.Group>\n                    </Form>\n                    <br/>\n                </center>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Moment from 'moment';\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport { Table, Button } from \"react-bootstrap\";\nimport cogoToast from 'cogo-toast';\n// import SearchMember from './SearchMember';\n\n\n\n\nconst NewUserList = ({ list, total }) => {\n\n    const obsRef = useRef(null); \t//observer Element\n    const [List, setList] = useState([]);\t//Post List\n\n    const [page, setPage] = useState(0); //현재 페이지\n    const [load, setLoad] = useState(false); //로딩 스피너\n    const preventRef = useRef(true); //옵저버 중복 실행 방지\n    const endRef = useRef(false); //모든 글 로드 확인\n\n    const [role, setRole] = useState(\"\");\n\n    const[search, setSearch] = useState(\"\");\n\n    // const [totalElement, setTotalElement] = useState(null);\n\n\n    useEffect(() => { //옵저버 생성\n        const observer = new IntersectionObserver(obsHandler, { threshold: 0.5 });\n        if (obsRef.current) observer.observe(obsRef.current);\n        return () => { observer.disconnect(); }\n    }, [])\n\n\n    useEffect(() => {\n        getUser();\n    }, [page])\n\n\n    //권한 변경\n    const handleRole = (memberId, loginID) => (e) => {\n        if(window.confirm(\"권한을 변경 하시겠습니까?\")){\n            setRole(e.target.value);\n            updateUserRole(memberId, e.target.value);\n        }\n        \n    }\n\n    const obsHandler = ((entries) => { //옵저버 콜백함수\n        const target = entries[0];\n        if (!endRef.current && target.isIntersecting && preventRef.current) { //옵저버 중복 실행 방지\n            preventRef.current = false; //옵저버 중복 실행 방지\n            setPage(prev => prev + 1); //페이지 값 증가\n        }\n    })\n\n\n    const updateUserRole = (memberId, role) =>{\n\n        console.log(role);\n        console.log(memberId);\n        const send_param = {\n            id: memberId,\n            role: role\n        }\n\n        \n        axios\n        .put(`/members/${memberId}`, send_param,\n        {\n          headers: {\n            'Authorization': 'Bearer ' + $.cookie('accessToken'),\n          }\n        })\n        .then(response =>{\n            if(response.status ===200){\n                cogoToast.success(response.data.message);\n            }else{\n                cogoToast.error(\"role 수정 실패\");\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        });\n\n    };\n\n    const getUser = useCallback(async () => { //글 불러오기  \n\n        setLoad(true); //로딩 시작\n\n        // ---- Get Data Code ---\n        // const res = await axios({ method: 'GET', url: `/members`});\n        const res = await axios.get(`/members`, {\n            params:{\n                page: page\n            },\n            headers: {\n                'Authorization': 'Bearer ' + $.cookie('accessToken'),\n              }\n        });\n        if (res.data) {\n            if (res.data.last) { //마지막 페이지일 경우\n                endRef.current = true;\n            }\n            setList(prev => [...prev, ...res.data.content]); //리스트 추가\n            preventRef.current = true;\n        }\n        else {\n            console.log(res); //error\n        }\n\n        setLoad(false); //로딩 종료\n    }, [page]);\n\n    const createDateFormat = (date) => {\n        return Moment(date).format('YYYY-MM-DD HH:mm:ss')\n    }\n\n\n\n\n\n///////////////////검색창\n\n\n    const handleSearch = (e) =>{\n        setSearch(e.target.value);\n    }\n\n    const Search = (e) =>{\n\n        setPage(0);\n        \n\n        if(search === null || search === ''){\n            axios\n            .get(`/member/search`, {\n                params: {\n                    searchWord: search,\n                    page: page\n                }\n            })\n        }\n\n\n    }\n\n\n    return (\n        \n        <div className=\"container\">\n            {/* <div style={{ marginBottom: \"1%\" }}>\n                <h2>{this.state.boardName}</h2>\n            </div>\n\n            <div>\n                <h5>{this.state.totalPages} 중 {this.state.currentPage + 1} 페이지</h5>\n            </div> */}\n            <form onSubmit={e => Search(e)}>\n                <input type=\"text\" value={search} placeholder=\"\" onChange={handleSearch}/>\n                <Button type='submit'>검색</Button>\n            </form>\n            <div>\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr style={{ textAlign: \"center\" }}>\n                            <th style={{ width: \"20%\" }}>아이디</th>\n                            <th style={{ width: \"10%\" }}>이름</th>\n                            <th style={{ width: \"40%\" }}>가입일</th>\n                            <th style={{ width: \"10%\" }}>권한</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            List &&\n                            <>\n                                {\n                                    List.map((user) =>\n                                        <tr>\n\n                                            <td style={{ textAlign: \"center\" }}>\n                                                {user.loginId}\n                                            </td>\n                                            <td style={{ textAlign: \"center\" }}>\n                                                {user.name}\n                                            </td>\n                                            <td style={{ textAlign: \"center\" }}>\n                                                {createDateFormat(user.createDate)}\n                                            </td>\n                                            <td style={{ textAlign: \"center\" }}>\n                                                {user.role}\n                                            </td>\n                                            <td>\n                                                <select value={user.role} onChange={handleRole(user.id, user.loginId)}>\n                                                    <option value=\"ADMIN\">\n                                                        ADMIN\n                                                    </option>\n                                                    <option value=\"SUBSCRIBER\">\n                                                    SUBSCRIBER\n                                                    </option>\n                                                    <option value=\"MEMBER\">\n                                                        MEMBER\n                                                    </option>\n\n                                                </select>\n                                            </td>\n                                        </tr>\n\n                                    )\n                                }\n                            </>\n                        }\n\n                        {\n                            load ?\n                            <div>로딩중</div>\n                            :\n                            <></>\n                        }\n\n                    </tbody>\n                </Table>\n\n                <div className=\"py-3 text-center\"  ref={obsRef}>...</div>\n            </div>\n            <div>\n                \n            </div>\n\n        </div>\n\n    );\n\n}\n\n\n\nexport default NewUserList;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\nimport cogoToast from 'cogo-toast';\nimport {} from \"../../css/commentForm.css\";\n\naxios.defaults.withCredentials = true;\n\n\nclass CommentEditor extends Component {\n  componentDidMount() {\n  }\n\n  createComment = () => {\n\n    // console.log(props)\n\n    if(!$.cookie('accessToken')) {\n      cogoToast.error(\"로그인 후 가능합니다!!\");\n      // window.location.href = \"/\";   \n    }\n    let send_param;\n\n    const CommentContent = this.comment.value;\n\n    if (CommentContent === undefined || CommentContent === \"\") {\n      cogoToast.warn(\"댓글 내용을 입력 해주세요.\");\n      CommentContent.focus();\n    }\n      send_param = {\n        boardId: this.props.boardId,\n        content: CommentContent\n      };\n\n      console.log(this.props.boardId);\n\n    axios\n      .post(`/comments`,send_param,\n      {\n        headers: {\n          'Authorization': 'Bearer ' + $.cookie('accessToken')\n        }\n      })\n      .then(response => {\n        if(response.status === 201){\n          cogoToast.success(\"댓글 작성 완료\");\n          //새로고침.\n        }\n      })\n      .catch(err => {\n        cogoToast.error(\"댓글 작성 실패\");\n      })\n\n      window.location.reload();\n  };\n\n  onEnterPress = (e) => {\n    if(e.keyCode === 13 && e.shiftKey === false) {\n      e.preventDefault();\n      this.createComment();\n    }\n  }\n\n\n  render() {\n    \n\n    return (\n      <div className=\"comment_div\">\n        <h4>Comment</h4>\n          <div className='comment_write'>\n            <textarea \n              rows='3'\n              ref={ref => (this.comment = ref)}\n              maxLength='100'\n              placehoder='150자 이내의 댓글을 입력해주세요.'\n              onKeyDown={this.onEnterPress}\n            >\n            </textarea>\n            <input type='button' id='comment_submit_button' value='등록' onClick={this.createComment} /> \n          </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default CommentEditor;\n","import React, {Component} from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport { Grid,Card,Form, Segment, Image, Placeholder } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport {} from \"jquery.cookie\";\naxios.defaults.withCredentials = true;\n\nclass UserProfileModal extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      user: '',\n      s3_url: 'https://s3.ap-northeast-2.amazonaws.com/cidsprofileimg/',\n    }\n  }\n\n  componentDidMount(){\n    this.getUserInfo();\n  }\n\n  //user정보 가져오기\n  getUserInfo = () => {\n    this.setState({\n      user: this.props.user\n    });\n  }\n\n\n  render(){\n\n    return (\n      <div className=\"container\">\n      <Modal show={this.props.show} onHide={this.props.showHandler} style={{textAlign:\"center\"}} size=\"lg\" centered>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            User Profile\n          </Modal.Title>\n        </Modal.Header>\n      <Modal.Body>\n        <Segment style={{marginBottom: \"20px\", marginTop: \"20px\"}}>\n      \n            <Grid doubling columns={2} style={{marginBottom:\"3%\",marginTop:\"3%\"}}>\n              <Grid.Column>\n              <Card key={this.state.user.name} style={{width:\"280px\"}} >\n                <Image src={this.state.s3_url + this.state.user.img_path} style={{height: \"280px\", width: \"280px\"}}/>\n                <Placeholder>\n                  <Card.Description>User Image</Card.Description>\n                </Placeholder>\n                <Card.Content>\n                  {this.state.user.name} ({this.state.user.login_id})\n                </Card.Content>\n              </Card>\n              </Grid.Column>\n              <Grid.Column>\n                <Form> \n                  <Form.Group widths={2}>\n                    <Form.Input label=\"email\" type=\"text\" value={this.state.user.email} readOnly={true}/>  \n                    <Form.Input label=\"telphone\" type=\"text\" value={this.state.user.telephone} readOnly={true}/>\n                  </Form.Group>\n                  <Form.Group widths={2}>\n                    <Form.Input label=\"last name\" type=\"text\" value={this.state.user.last_name} readOnly={true}/>\n                    <Form.Input label=\"first name\" type=\"text\" value={this.state.user.first_name} readOnly={true}/>\n                  </Form.Group>\n                </Form>\n              </Grid.Column>\n            </Grid>\n          </Segment>\n        </Modal.Body>\n      </Modal>\n     \n      </div>\n    );\n  };\n}\nexport default UserProfileModal;\n","import React, { useEffect, useState } from 'react';\nimport $ from \"jquery\";\nimport { } from \"jquery.cookie\";\nimport cogoToast from 'cogo-toast';\nimport { } from \"../../css/commentForm.css\";\nimport axios from 'axios';\n\nfunction CommentReply(props) {\n\n  const [isReplyOrUpdate, setIsReplyOrUpdate] = useState(props.isReplyOrUpdate);//리플은 true, 수정은 false\n\n  const [boardId, setBoardId] = useState(\"\");\n\n  const [parentCommentId, setParentComentId] = useState(\"\");\n\n\n  const [commentContent, setCommentContent] = useState(\"\");\n\n  const [content, setContent] = useState(props.content);\n\n  useEffect(() => {\n\n    console.log(props.boardId);\n    console.log(props.parentCommentId)\n    setBoardId(props.boardId);\n    setParentComentId(props.parentCommentId);\n    setIsReplyOrUpdate(props.isReplyOrUpdate);\n    setContent(props.content);\n\n  }, [])\n\n\n\n  const createComment = () => {\n\n    if (!$.cookie('accessToken')) {\n      cogoToast.error(\"로그인 후 가능합니다!!\");\n    }\n\n    let send_param;\n\n    // const CommentContent = comment.value;\n\n    if (commentContent === undefined || commentContent === \"\") {\n      cogoToast.warn(\"댓글 내용을 입력 해주세요.\");\n      commentContent.focus();\n    }\n    send_param = {\n      boardId: boardId,\n      content: commentContent,\n      parentId: parentCommentId\n    };\n\n\n    axios\n      .post('/comments', send_param,\n        {\n          headers: {\n            'Authorization': 'Bearer ' + $.cookie('accessToken')\n          }\n        })\n      .then(response => {\n        if (response.status === 201) {\n          cogoToast.success(\"대댓글 작성 완료\");\n        }\n      })\n      .catch(err => {\n        cogoToast.error(\"대댓글 작성 실패\")\n      })\n\n      window.location.reload();\n\n  };\n\n  const updateComment = () => {\n    if (window.confirm('정말 수정하시겠습니까?')) {\n        const send_param = {\n            content: content\n        }\n        axios\n            .put(`/comments/${props.commentId}`, send_param,\n                {\n                    headers: {\n                        'Authorization': 'Bearer ' + $.cookie('accessToken')\n                    }\n                })\n            .then(response => {\n                if (response.status === 200) {\n                    this.setState({\n                        //modified_date: response.data.comment.modified_date\n                    })\n                    cogoToast.success(\"댓글이 수정되었습니다.\");\n                }\n                else {\n                    cogoToast.error(\"댓글 수정에 실패했습니다.\");\n                }\n            })\n            .catch(err => {\n                //console.log(err);\n                cogoToast.error(\"댓글 수정에 실패했습니다.\");\n            })\n    }\n\n    window.location.reload();\n}\n\n\n\n  const textChange = (e) => {\n    setCommentContent(e.target.value);\n  }\n\n  const onEnterPress = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      e.preventDefault();\n      createComment();\n    }\n  };\n\n  const handleChange = (e) => {\n    setContent(e.target.value);\n}\n\n\n  return (\n    <>\n      {isReplyOrUpdate ?\n        <div className=\"comment_div\">\n          <div className='comment_write'>\n            <textarea\n              rows='2'\n              // ref={ref => (comment = ref)}\n              maxLength='100'\n              placehoder='100자 이내의 댓글을 입력해주세요.'\n              onChange={textChange}\n              onKeyDown={onEnterPress}\n            >\n            </textarea>\n            <input type='button' id='comment_submit_button' value='등록' onClick={createComment} />\n          </div>\n        </div>\n    \n      :\n      <div className=\"comment_div\">\n        <div className='comment_write'>\n          <textarea\n            rows='2'\n            maxLength='100'\n            value={content}\n            onChange={handleChange}\n            onKeyDown={onEnterPress}\n          >\n          </textarea>\n          <input type='button' id='comment_submit_button' value='수정' onClick={updateComment} />\n        </div>\n      </div>\n}\n    </>\n  );\n}\n\nexport default CommentReply;","import React, { Component, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Moment from 'moment';\n//https://react.semantic-ui.com/views/comment/#types-comment\nimport { Comment } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport UserProfileModal from \"../../User/UserProfileModal\";\nimport { } from \"../../css/NewCommentForm.css\";\nimport $ from 'jquery';\nimport { } from 'jquery.cookie';\nimport { } from '../../css/userProfile.css';\nimport { } from '../../css/pagination.css';\nimport cogoToast from 'cogo-toast';\nimport CommentReply from './CommentReply';\n// import { render } from \"@testing-library/react\";\n\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nconst bucket = 'https://s3.ap-northeast-2.amazonaws.com/cidsprofileimg/';\n\n\nconst CommentsRow = ({ commentRow, comments, boardId }) => {\n\n\n    const [editForm, setEditForm] = useState(false);\n    const [content, setContent] = useState(\"\");\n    const [replyVisible, setReplyVisible] = useState(false);\n    const [editVisible, setEditVisible] = useState(false);\n    const [userImageUri, setUserImageUri] = useState(\"\");\n\n\n    //useEffect에서 commentRow들어간 곳이 deps임.\n    //여기에 지정한 값이 변경 될때, useEffect()가 호출됨.\n    //여기서는 페이징으로 새로운 댓글이 보일때마다 setContent호출해야하므로.\n    useEffect(() => {\n\n        setContent(commentRow.content);\n\n    }, [commentRow])\n\n\n    const deleteComment = (commentId) => {\n        if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n            axios\n                .delete(`/comments/${commentRow.id}`,\n                    {\n                        headers: {\n                            'Authorization': 'Bearer ' + $.cookie('accessToken'),\n                            'Content-Type': 'application/json'\n                        }\n                    })\n                //정상 수행\n                .then(response => {\n                    if (response.status === 200) {\n                        cogoToast.success(\"댓글이 삭제 되었습니다.\");\n\n                        // this.props.deleteCheck(this.props.comment.id);\n                    }\n                    else {\n                        cogoToast.error(\"댓글삭제에 실패했습니다.\");\n                    }\n                })\n                //에러\n                .catch(err => {\n                    console.log(err);\n                    cogoToast.error(\"댓글 삭제 실패\");\n                });\n        }\n        else {\n            //\n        }\n\n        window.location.reload();\n\n    }\n\n\n    const createDateFormat = (date) => {\n        return Moment(date).format('YYYY-MM-DD HH:mm:ss')\n    }\n\n    const paddingLeftValue = (deep) => {\n\n        if (deep === 2) {\n            return \"30px\";\n        } else if (deep === 3) {\n            return \"60px\";\n        } else if (deep > 3) {\n            return \"90px\";\n        } else {\n            return \"0px\";\n        }\n    }\n\n\n    const handleUserProfileShow = (deep) => {\n\n        if (deep === 2) {\n            return \"30px\";\n        } else if (deep === 3) {\n            return \"60px\";\n        } else if (deep > 3) {\n            return \"90px\";\n        } else {\n            return \"0px\";\n        }\n    }\n\n    const imgStyle = {\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        marginLeft: \"15px\",\n        cursor: \"pointer\",\n        marginRight: \"15px\",\n        border: \"3px solid #fff\",\n        boxShadow: \"0 0 16px rgb(221,221,221)\"\n    }\n\n\n    return (\n        <>\n\n            <Comment style={{ marginBottom: 20, paddingLeft: paddingLeftValue(commentRow.deep) }}>\n                <Comment.Avatar\n                    onClick={handleUserProfileShow}\n                    className=\"userProfile\"\n                    src={commentRow.memberImgUri} \n                    style={imgStyle} />\n\n                <Comment.Content>\n                    <Comment.Author onClick={handleUserProfileShow} as='a'>{commentRow.author}</Comment.Author>\n\n                    <>\n                        <Comment.Metadata>\n                            <div>{createDateFormat(commentRow.createDate)}</div>\n                        </Comment.Metadata>\n                        {commentRow.available ?\n                            <Comment.Text>{commentRow.content}</Comment.Text>\n                            :\n                            <Comment.Text>#삭제된 댓글입니다#</Comment.Text>\n                        }\n                        {commentRow.editable\n                            ?\n                            <>\n                                {commentRow.available\n                                    ?\n                                    <Comment.Actions style={{ paddingLeft: \"15px\" }}>\n                                        <Comment.Action onClick={() => { setEditVisible(!editVisible) }}> 수정 </Comment.Action>\n                                        {editVisible && <CommentReply parentCommentId={commentRow.id} boardId={boardId} isReplyOrUpdate={false} content={content} commentId={commentRow.id} />}\n                                        <Comment.Action onClick={deleteComment}> 삭제 </Comment.Action>\n                                        <Comment.Action onClick={() => { setReplyVisible(!replyVisible) }}>{replyVisible ? \"리플끄기\" : \"리플\"}</Comment.Action>\n                                        {replyVisible && <CommentReply parentCommentId={commentRow.id} boardId={boardId} isReplyOrUpdate={true} />}\n\n                                    </Comment.Actions>\n                                    :\n                                    <Comment.Actions style={{ paddingLeft: \"15px\" }}>\n                                        <Comment.Action onClick={() => { setEditVisible(!editVisible) }}> 수정 </Comment.Action>\n                                        {editVisible && <CommentReply parentCommentId={commentRow.id} boardId={boardId} isReplyOrUpdate={false} content={content} commentId={commentRow.id} />}\n                                        <Comment.Action onClick={deleteComment}> 삭제 </Comment.Action>\n                                        <Comment.Action onClick={() => { setReplyVisible(!replyVisible) }}>{replyVisible ? \"리플끄기\" : \"리플\"}</Comment.Action>\n                                        {replyVisible && <CommentReply parentCommentId={commentRow.id} boardId={boardId} isReplyOrUpdate={true} />}\n\n                                    </Comment.Actions>\n                                }\n\n\n\n                            </>\n                            :\n                            <>\n                            <Comment.Actions style={{ paddingLeft: \"15px\" }}>\n                                        <Comment.Action onClick={() => { setReplyVisible(!replyVisible) }}>{replyVisible ? \"리플끄기\" : \"리플\"}</Comment.Action>\n                                        {replyVisible && <CommentReply parentCommentId={commentRow.id} boardId={boardId} isReplyOrUpdate={true} />}\n                                    </Comment.Actions>\n                            </>\n                        }\n                    </>\n\n                </Comment.Content>\n            </Comment>\n\n        </>\n    );\n\n\n};\n\n\nexport default CommentsRow;\n\n","import React, { Component } from \"react\";\nimport { ButtonGroup, Button, Jumbotron, Image } from \"react-bootstrap\";\nimport CommentEditor from \"../Comment/CommentEditor\";\n// import UserProfileModal from \"../../User/UserProfileModal\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Moment from \"moment\";\nimport $ from 'jquery';\nimport { } from '../../css/userProfile.css';\nimport cogoToast from 'cogo-toast';\nimport InvalidPage from \"../../404Page\"\n\n/////////////////////////////\nimport PaginationPostAndComment from \"../Pagination/PaginationPostAndComment\";\nimport CommentsRow from \"../Comment/CommentsRow\";\nimport { Comment } from 'semantic-ui-react';\n///////////////////////////////\n\nimport \"../../css/NavigaionGuardModalStyle.scss\"\n\naxios.defaults.withCredentials = true;\n\n\nconst bucket = 'https://s3.ap-northeast-2.amazonaws.com/cidsprofileimg/';\n\nclass Post extends Component {\n  state = {\n    post: [],\n    postType: \"\",\n    boardName: \"\",\n    user: '',\n    userProfileModalShow: false,\n    available: 1,\n    editable: false,\n    userImageUri: \"\",\n\n    comments: [],\n    currentPage: 0,\n    totalPages: 0,\n    numberComment: 0\n  };\n\n \n\n\n  componentWillMount() {\n    if (this.props.match.params.id !== undefined) {\n      this.getShow();\n      this.getComments(0);\n\n    } else {\n      window.location.href = \"/\";\n    }\n\n    console.log(this.props);\n\n\n  }\n\n\n\n  DateFormat = (date) => {\n    return Moment(date).format('YYYY-MM-DD hh:mm:ss');\n  }\n\n  //게시글 삭제\n  deletePost = () => {\n\n\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios\n        .delete(`/boards/${this.props.match.params.id}`,\n          {\n            headers: {\n              'Authorization': 'Bearer ' + $.cookie('accessToken'),\n              'Content-Type': 'application/json'\n            }\n          })\n        //정상 수행\n        .then(response => {\n          cogoToast.success(\"게시글이 삭제 되었습니다.\");\n          this.goBack();\n        })\n        //에러\n        .catch(err => {\n          console.log(err);\n          cogoToast.error(\"글 삭제 실패\");\n        });\n    }\n\n  };\n\n\n  //메뉴 분기\n  Category = (post_type) => {\n\n    if (post_type === 'notification') {\n      this.setState({\n        postType: \"notification\",\n        boardName: \"공지사항\"\n      });\n    }\n    else if (post_type === 'qna') {\n\n      this.setState({\n        postType: \"qna\",\n        boardName: \"Q & A\"\n      });\n    }\n\n  }\n  //유저 프로필 show 컨트롤\n  handleUserProfileShow = () => {\n\n    this.setState({\n      userProfileModalShow: !this.state.userProfileModalShow\n    });\n  }\n\n  //뒤로가기\n  goBack = () => {\n    this.props.history.goBack();\n  }\n\n\n\n  //post render\n  getShow = () => {\n    axios\n      .get(`/boards/${this.props.match.params.id}`,\n        {\n          headers: {\n            'Authorization': 'Bearer ' + $.cookie('accessToken'),\n            'Content-Type': 'application/json'\n          }\n        })\n      //정상 수행\n      .then(response => {\n\n        if (response.status === 200) {\n          console.log(\"게시물을 불러왔습니다.\");\n          cogoToast.success(this.props.match.params.id+\"번 게시물입니다.\");\n          this.setState({ \n            editable: response.data.data.editable,\n            userImageUri: response.data.data.memberImageUri\n           }, ()=>{\n            console.log(\"userImageUri : \",this.state.userImageUri)\n            console.log(\"editable\",this.state.editable);\n           })\n          \n          this.Category(response.data.data.type);\n          const post = (\n            <div>\n              <h1>제목 : {response.data.data.title}</h1>\n              <div className=\"row\">\n                <div onClick={this.handleUserProfileShow}  >\n                  <Image className=\"userProfile\" src={this.state.userImageUri} width=\"25\" height=\"25\" style={{ border: \"3px solid #fff\", boxShadow: \"0 0 16px rgb(221,221,221\", marginLeft: \"15px\", cursor: \"pointer\" }}  />\n                </div>\n                <h6 style={{ marginTop: \"5px\", marginLeft: \"10px\", fontWeight: \"600\" }}>{response.data.data.author}( {response.data.data.email} )</h6>\n                <h6 style={{ display: \"inline-block\", marginLeft: \".5em\", color: \"rgba(0,0,0,.4)\", fontSize: \".875em\", marginTop: \"6px\" }}>{this.DateFormat(response.data.data.updateTime)}</h6>\n              </div>\n              <hr />\n              <div style={{ minHeight: \"300px\" }}>\n                <p dangerouslySetInnerHTML={{ //ckeditor의 형식이 html이기 때문에 html형식으로 넣어줘야함\n                  __html: response.data.data.content\n                }}>\n                </p>\n              </div>\n              <ButtonGroup aria-label=\"Basic example\">\n                <Button variant=\"secondary\" onClick={this.goBack}>뒤로가기</Button>\n                {\n                  \n                  this.state.editable ?\n                  <>\n                  <NavLink\n                  to={{\n                    pathname: `/posts/update`,\n                    data: {\n                      id: this.props.match.params.id,\n                      title: response.data.data.title,\n                      content: response.data.data.content\n                    }\n                  }}\n                >\n                  <Button disabled={this.state.editable === true ? \"\" : \"false\"} variant=\"secondary\">\n                    글 수정\n                  </Button>\n                </NavLink>\n                  <Button disabled={this.state.editable === true ? \"\" : \"false\"} variant=\"secondary\" onClick={this.deletePost}>글 삭제</Button>\n                  </>\n                  :\n                  null\n                }\n                \n              </ButtonGroup>\n\n              <hr />\n\n            </div>\n          );\n          this.setState({\n            post: post,\n            user: response.data.data.author,\n            available: response.data.data.available\n          });\n        }\n        else {\n          console.log(\"error\");\n\n        }\n\n      })\n      //에러\n      .catch(err => {\n        cogoToast.error(\"로그인 후 이용해주세요.\")\n        \n        console.log(\"error 발생\");\n        console.log(err);\n        this.setState({\n          available: 0\n        })\n        this.goBack();\n\n      });\n  };\n\n  updatePost = () => {\n\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  \n  paginate = (pageNumber) => {\n    this.setState({\n      currentPage: pageNumber.selected\n    })\n\n    console.log(this.state.currentPage);\n    console.log(pageNumber);\n\n    this.getComments(pageNumber.selected);\n    this.forceUpdate();\n    // window.location.reload();\n  }\n\n\n  getComments = (pageNum) => {\n    const send_param = { boardId: this.props.match.params.id };\n    console.log(this.props.match.params.id);\n    axios\n      .get(`/comments`, {\n        headers: {\n          'Authorization': 'Bearer ' + $.cookie('accessToken'), 'Content-Type': 'application/json'\n        },\n        params: {\n          boardId: send_param.boardId,\n          page: pageNum\n        }\n      })\n      .then(response => {\n        this.setState({\n          numberComment: response.data.numberOfElements,\n          totalPages: response.data.totalPages\n        })\n        \n        console.log(response.data.totalPages);\n        console.log(response.data.numberOfElements);\n        console.log(this.state.numberComment);\n        \n\n        // const totalPages = response.data.totalPages;\n        // const itemsCountPerPage = response.data.size;\n        // const totalItemsCount = response.data.totalElements;\n        // const editable = response.data.content.editable;\n        \n\n        console.log(this.state.totalPages);\n\n        \n        if (response.data.numberOfElements > 0) {\n          const returnedComments = response.data.content;\n          // console.log(response.data.content)\n          this.setState({\n            comments: returnedComments\n          })\n          \n        } else {\n          this.state.comments.push([\n            <tr>\n              <td colSpan=\"5\" style={{ textAlign: \"center\" }}>댓글이 존재하지 않습니다.</td>\n            </tr>\n          ])\n          \n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //////////////////////////////////////////////////////////////////////\n\n  render() {\n    \n    const divStyle = {\n      marginTop: \"3%\",\n      minWidth: \"70%\",\n      minHeight: \"700px\",\n    };\n\n    if (this.state.available) {\n      return (\n        <div className=\"container\" style={{ marginTop: \"3%\" }}>\n          <Jumbotron style={{ backgroundColor: \"#f0f2f4\" }}>\n            <h6 style={{ color: \"green\" }} >[{this.state.boardName}]</h6>\n            {this.state.post}\n          </Jumbotron>\n\n           \n          <CommentEditor boardId={this.props.match.params.id} />\n\n          <div style={divStyle}>\n            {this.state.numberComment > 0 ?\n            <>\n           <Comment.Group size='large'>\n{this.state.comments.map((comment) =>(\n              <CommentsRow commentRow = {comment} comments={this.state.comments} boardId={this.props.match.params.id}/>\n            ))}\n          </Comment.Group>\n          </>\n            :\n            <>\n            <h3 colSpan=\"5\" style={{ textAlign: \"center\" }}>댓글이 존재하지 않습니다.</h3>\n          </>\n            }\n            \n          </div>\n          \n          {/* <PaginationPostAndComment commentsPerPage={this.state.commentsPerPage} totalComments={this.state.comments.length} paginate={this.paginate}/> */}\n\n\n          <PaginationPostAndComment totalPage = {this.state.totalPages} paginate={this.paginate} />\n\n\n          {/* {this.state.user?\n          <UserProfileModal user={this.state.user} show ={this.state.userProfileModalShow} showHandler={this.handleUserProfileShow}/>\n          :<></>} */}\n\n          \n        </div>\n\n      )\n    }\n    else {\n      return <InvalidPage />\n    }\n  }\n}\n\nexport default Post;\n","import React, { Component, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Moment from 'moment';\nimport { Comment } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n// import UserProfileModal from \"../../User/UserProfileModal\";\nimport { } from \"../../css/NewCommentForm.css\";\nimport { } from 'jquery.cookie';\nimport { } from '../../css/userProfile.css';\nimport { } from '../../css/pagination.css';\nimport { NavLink } from \"react-router-dom\";\n\n\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nconst bucket = 'https://s3.ap-northeast-2.amazonaws.com/cidsprofileimg/';\n\n\nconst PostRow = ({ PostRow }) => {\n\n    const [Post, setPost] = useState(null);\n\n    //useEffect에서 commentRow들어간 곳이 deps임.\n    //여기에 지정한 값이 변경 될때, useEffect()가 호출됨.\n    //여기서는 페이징으로 새로운 댓글이 보일때마다 setContent호출해야하므로.\n    useEffect(() => {\n\n        // setContent(commentRow.content);\n        setPost(PostRow);\n\n    }, [PostRow])\n\n\n\n\n    const createDateFormat = (date) => {\n        return Moment(date).format('YYYY-MM-DD HH:mm:ss')\n    }\n\n    const imgStyle = {\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        marginLeft: \"15px\",\n        cursor: \"pointer\",\n        marginRight: \"15px\",\n        border: \"3px solid #fff\",\n        boxShadow: \"0 0 16px rgb(221,221,221)\"\n    }\n\n\n    return (\n        <>\n            <tr>\n                <td style={{ textAlign: \"center\" }}>\n                    {PostRow.id}\n                </td>\n                <td>\n                    <NavLink style={{ color: \"black\" }}\n                        to={{\n                            pathname: `/posts/${PostRow.id}`, query: {}\n                        }}\n                    >\n                        {PostRow.title}\n                    </NavLink>\n                </td>\n                <td style={{ textAlign: \"center\" }}>\n                    {PostRow.author}\n                </td>\n                <td style={{ textAlign: \"center\" }}>\n                    {createDateFormat(PostRow.createDate)}\n                </td>\n                <td style={{ textAlign: \"center\" }}>\n                    {PostRow.hit}\n                </td>\n            </tr>\n\n        </>\n    );\n\n\n};\n\n\nexport default PostRow;\n\n","import React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport { } from \"jquery.cookie\";\nimport cogoToast from \"cogo-toast\";\nimport { } from '../../css/pagination.css';\n\n\nimport PostRow from \"./PostRow\";\nimport PaginationPostAndComment from \"../Pagination/PaginationPostAndComment\";\n\n\naxios.defaults.withCredentials = true;\n\n\nclass PostList extends Component {\n    state = {\n        posts: [],\n        postType: \"\",\n        boardName: \"\",\n\n        currentPage: 0,\n        totalPages: 0,\n\n        search: false,\n\n        searchOption: \"title\",\n        keyword: \"\"\n\n    }\n\n    Category = () => {\n        if (this.props.match.url === '/notice') {\n            this.setState({\n                postType: \"notification\",\n                boardName: \"공지사항\"\n            });\n            return \"notification\";\n        } else if (this.props.match.url === '/qna') {\n            console.log(\"현재 /qna입니다.\");\n            this.setState({\n                postType: \"qna\",\n                boardName: \"Q & A\"\n            }, () => {\n                console.log(this.state.postType)\n            });\n            return \"qna\";\n        }\n    }\n\n    componentDidMount() {\n        // this.Category();\n        if(!this.state.search){\n            this.getPosts(this.state.currentPage);\n        }\n\n        \n        \n    }\n\n\n\n\n    getPosts = (pageNumber) => {\n\n        \n        console.log(this.state.searchOption);\n        console.log(this.state.search);\n        console.log(this.state.keyword);\n        console.log(this.state.boardName);\n        console.log(this.state.postType);\n        // const send_param = this.Category();\n        let returnType = this.Category();\n        let send_params;\n        let send_body;\n        let url;\n        if(this.state.search === true){\n            url = `/boards/search`;\n            send_params = {\n                boardType: returnType,\n                page: pageNumber,\n                \n            };\n            send_body ={\n                option: this.state.searchOption,\n                keyword: this.state.keyword\n            };\n        }\n        \n            url = `/boards`;\n            send_params = {\n                boardType: returnType,\n                page: pageNumber\n            };\n\n\n        console.log(send_params.boardType)\n\n        /* 권한 체크ajax */\n        \n                axios // 실제 post List 가져오기\n                    .get(url, {\n                        params: send_params,\n                        send_body,\n                        withCredentials: true\n                    })\n                    .then(returnData => {\n                        const totalPages = returnData.data.totalPages;\n\n                        this.setState({ totalPages: totalPages })\n\n                        if (returnData.data.numberOfElements > 0) {\n                            const returnedPosts = returnData.data.content;\n                            this.setState({\n                                posts: returnedPosts\n                            })\n\n                        } else {\n                            //게시글 못 찾은 경우\n                            this.state.posts.push([\n                                <tr>\n                                    <td colSpan=\"5\" style={{ textAlign: \"center\" }}>게시글이 존재하지 않습니다.</td>\n                                </tr>\n                            ])\n\n                        }\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n\n\n    };\n\n    whitePost = () => {\n        axios\n            .get(`/boards/auth/${this.state.postType}`,\n                {\n                    headers: {\n                        'Authorization': 'Bearer ' + $.cookie('accessToken'),\n                        'Content-Type': 'application/json'\n                    }\n                })\n            .then(response => {\n                console.log(response.status);\n                //   console.log(this.state.postType);\n                if (response.status === 200) {\n                    if(this.state.postType === \"qna\"){\n                        this.props.history.push({\n                            pathname: \"/posts/qna/write\",\n                            query: { postType: this.state.postType }\n                        });\n                    }else if(this.state.postType === \"notification\"){\n                        this.props.history.push({\n                            pathname: \"/posts/notification/write\",\n                            query: { postType: this.state.postType }\n                        });\n                    }\n                    \n\n                    console.log(\"글 쓸 수 있는 권한 있음\");\n\n\n                }\n            }).catch(err => {\n                console.log(err);\n                cogoToast.error(\"글 쓰기 권한이 없습니다.\");\n            });\n\n    }\n\n    ///////////////////////////////////////////////\n    paginate = (pageNumber) => {\n        this.setState({\n            currentPage: pageNumber.selected\n        })\n\n        console.log(this.state.currentPage);\n        console.log(pageNumber);\n\n            this.getPosts(pageNumber.selected);\n            this.forceUpdate();\n        \n        \n        // window.location.reload();\n    }\n\n\n    /////////////////검색\n    handleSearch = (e) =>{\n       this.setState({\n            keyword: e.target.value\n       })\n        \n    }\n\n\n    // onSubmit = () =>{\n    //     this.setState({\n    //         search: true\n    //     })\n    //     this.getPosts(0);\n    // }\n\n    handleSearchOption = (e) =>{\n        this.setState({\n            searchOption: e.target.value\n        })\n\n    }\n\n\n    render() {\n        const divStyle = {\n            marginTop: \"3%\",\n            minWidth: \"70%\",\n            minHeight: \"700px\",\n        };\n\n\n\n        return (\n            <div className=\"container\" style={divStyle}>\n                <div style={{ marginBottom: \"1%\" }}>\n                    <h2>{this.state.boardName}</h2>\n                </div>\n\n                <div>\n                    <h5>{this.state.totalPages} 중 {this.state.currentPage + 1} 페이지</h5>\n                </div>\n                <div>\n                    <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr style={{ textAlign: \"center\" }}>\n                                <th style={{ width: \"10%\" }}>#</th>\n                                <th style={{ width: \"40%\" }}>제목</th>\n                                <th>작성자</th>\n                                <th>작성일</th>\n                                <th>조회</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.posts.map((post) => (\n                                <PostRow PostRow={post} />\n                            ))}\n                        </tbody>\n                    </Table>\n                    <Button variant=\"secondary\" onClick={this.whitePost}>게시글 작성</Button>\n                </div>\n                <div>\n                    <PaginationPostAndComment totalPage={this.state.totalPages} paginate={this.paginate} />\n                </div>\n                <div>\n        \n            \n                   \n                    <div>\n                    <select value={this.state.searchOption} onChange={this.handleSearchOption}>\n                        <option value=\"title\">\n                            제목\n                        </option>\n                        <option value=\"titleAndContent\">\n                            제목 + 내용\n                        </option>\n                        <option value=\"author\">\n                            글쓴이\n                        </option>\n                    </select>\n                    <input style={{height: 20}}type=\"text\" placeholder=\"\" onChange={this.handleSearch}/>\n                    \n                        <NavLink \n                        to={{\n                            pathname: `/post/search`,\n                            data: {\n                                postType: this.state.postType,\n                                searchOption: this.state.searchOption,\n                                keyword: this.state.keyword,\n                                boardName: this.state.boardName\n                            },\n                            \n                        }}\n                        >\n                        {/* <Button>검색</Button> */}\n                        <Button>\n                            검색\n                        </Button>\n                        </NavLink>\n                    </div>\n\n                    \n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default PostList;","import $ from \"jquery\";\n\nclass MyUploadAdapter {\n    constructor(loader) {\n        // The file loader instance to use during the upload.\n        this.loader = loader;\n    }\n    // Starts the upload process.\n    _initRequest() {\n        console.log('_initRequest');\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        // Note that your request may look different. It is up to you and your editor\n        // integration to choose the right communication channel. This example uses\n        // a POST request with JSON as a data structure but your configuration\n        // could be different.\n        xhr.open('POST', '/image/upload', true);\n        xhr.setRequestHeader('Authorization', 'Bearer ' + $.cookie('accessToken'))\n        xhr.responseType = 'json';\n    }\n    _initListeners(resolve, reject, file) {\n        console.log('_initListeners ....', file);\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = `Couldn't upload file: ${file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // This example assumes the XHR server's \"response\" object will come with\n            // an \"error\" which has its own \"message\" that can be passed to reject()\n            // in the upload promise.\n            //\n            // Your integration may handle upload errors in a different way so make sure\n            // it is done properly. The reject() function must be called when the upload fails.\n            if (!response || response.error) {\n                return reject(response && response.error ? response.error.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            // This URL will be used to display the image in the content. Learn more in the\n            // UploadAdapter#upload documentation.\n            resolve({\n                default: response.data.imageUrl\n            });\n        });\n\n        // Upload progress when it is supported. The file loader has the #uploadTotal and #uploaded\n        // properties which are used e.g. to display the upload progress bar in the editor\n        // user interface.\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n    _sendRequest(file) {\n        // Prepare the form data.\n        const data = new FormData();\n        console.log('_sendRequest', file);\n        data.append('upload', file);\n\n        // Important note: This is the right place to implement security mechanisms\n        // like authentication and CSRF protection. For instance, you can use\n        // XMLHttpRequest.setRequestHeader() to set the request headers containing\n        // the CSRF token generated earlier by your application.\n\n        // Send the request.\n        this.xhr.send(data);\n    }\n\n    upload() {\n        return this.loader.file\n            .then(file => new Promise((resolve, reject) => {\n                console.log('file', file)\n                this._initRequest();\n                this._initListeners(resolve, reject, file);\n                this._sendRequest(file);\n            }));\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n}\nexport default MyUploadAdapter;\n","import React from 'react';\n// import ImageResize from '@ckeditor/ckeditor5-image/src/imageresize';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n\nimport Alignment from '@ckeditor/ckeditor5-alignment/src/alignment';     // <--- ADDED\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport Link from '@ckeditor/ckeditor5-link/src/link';\nimport List from '@ckeditor/ckeditor5-list/src/list';\nimport Image from '@ckeditor/ckeditor5-image/src/image';\nimport ImageCaption from '@ckeditor/ckeditor5-image/src/imagecaption';\nimport ImageStyle from '@ckeditor/ckeditor5-image/src/imagestyle';\nimport ImageToolbar from '@ckeditor/ckeditor5-image/src/imagetoolbar';\nimport ImageUpload from '@ckeditor/ckeditor5-image/src/imageupload';\nimport ImageResize from '@ckeditor/ckeditor5-image/src/imageresize';\nimport BlockQuote from '@ckeditor/ckeditor5-block-quote/src/blockquote';\nimport Table from '@ckeditor/ckeditor5-table/src/table';\n\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\nimport Heading from '@ckeditor/ckeditor5-heading/src/heading';\nimport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n\n\nimport MyUploadAdapter from './MyUploadAdapter'\n\nimport './MWEditor.css'\nfunction MWEditor({ mode, content, setContent }) {\n    const _onChange = (event, editor) => {\n        setContent(editor.getData())\n        console.log(editor.getData());\n    }\n\n    const _onBlur = (event, editor) => {\n        console.log('Blur.', );\n    }\n\n    const _onFocus = (event, editor) => {\n        console.log('_onFocus.', );\n    }\n    const _init = (editor) => {\n        // You can store the \"editor\" and use when it is needed.\n        console.log('Editor is ready to use!', );\n        editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n            return new MyUploadAdapter(loader);\n        };\n    }\n    const defaultToolbar = mode === \"edit\" ? ['heading', '|', 'bold', 'italic', '|', 'bulletedList', 'numberedList', '|', 'imageUpload', 'insertTable','|','alignment:left', 'alignment:right', 'alignment:center', 'alignment:justify', 'link', 'blockQuote', '|', 'undo', 'redo','highlight'] : [];\n    const editorConfig = {\n        plugins:[Essentials,Highlight,Table,Link,Paragraph,Alignment,Heading,Image,Bold,ImageResize,Italic,ImageUpload,ImageToolbar,ImageStyle,ImageCaption,BlockQuote,List],\n        toolbar: defaultToolbar,\n        heading: {\n            options: [\n                { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n                { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },\n                { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' }\n            ]\n        },\n        image: {\n            toolbar: [ 'imageTextAlternative', '|', 'imageStyle:alignLeft', 'imageStyle:full', 'imageStyle:alignRight' ],\n            resizeUnit: '%',\n            styles: [\n                // This option is equal to a situation where no style is applied.\n                'full',\n                // This represents an image aligned to the left.\n                'alignLeft',\n                // This represents an image aligned to the right.\n                'alignRight'\n            ]\n\n        },\n        alignment: {\n            options: [ 'left', 'right','center','justify' ]\n        },\n        highlight: {\n            options: [\n              {\n                  model: 'redPen',\n                  class: 'pen-red',\n                  title: 'Red pen',\n                  color: 'var(--ck-highlight-pen-red)',\n                  type: 'pen'\n              },\n              {\n                  model: 'greenPen',\n                  class: 'pen-green',\n                  title: 'Green pen',\n                  color: 'var(--ck-highlight-pen-green)',\n                  type: 'pen'\n              },\n              {\n                  model: 'yellowMarker',\n                  class: 'marker-yellow',\n                  title: 'Yellow marker',\n                  color: 'var(--ck-highlight-marker-yellow)',\n                  type: 'marker'\n              },\n              {\n                  model: 'greenMarker',\n                  class: 'marker-green',\n                  title: 'Green marker',\n                  color: 'var(--ck-highlight-marker-green)',\n                  type: 'marker'\n              },\n              {\n                  model: 'pinkMarker',\n                  class: 'marker-pink',\n                  title: 'Pink marker',\n                  color: 'var(--ck-highlight-marker-pink)',\n                  type: 'marker'\n              },\n              {\n                  model: 'blueMarker',\n                  class: 'marker-blue',\n                  title: 'Blue marker',\n                  color: 'var(--ck-highlight-marker-blue)',\n                  type: 'marker'\n              },\n            ]\n          },\n\n    }\n    return (\n        <CKEditor\n            editor={ClassicEditor}\n            config={editorConfig}\n            data={content}\n            onInit={_init}\n            onChange={_onChange}\n            onBlur={_onBlur}\n            onFocus={_onFocus}\n            disabled={mode !== \"edit\"} //readOnly\n        />\n    )\n}\n\nexport default MWEditor\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios'\n//예제\n//https://medium.com/@habibmahbub/basic-file-reader-with-react-js-80bf48d574da\n//https://dotnetthoughts.net/how-to-upload-multiple-files-with-html5-and-jquery/\nfunction MWFileReader({ accept, capture, multiple, fileQueue, setFileQueue }) {\n    const useStyles = makeStyles(theme => ({\n        button: {\n            margin: theme.spacing(1),\n        },\n        input: {\n            display: 'none',\n        },\n    }));\n    const classes = useStyles();\n\n    const styles = {\n        root: {\n            display: 'flex',\n            width: '100%',\n            height: '100%'\n        },\n        fileattach: {\n            border: '1px solid #c4c4c4',\n            width: '100%',\n            height: '100%',\n            'overflowY': 'auto',\n        },\n        fileselect: {\n            border: '1px solid #c4c4c4',\n            width: '10%',\n            display: 'flex',\n            'alignItems': 'center',\n            'flexDirection': 'column',\n            'justifyContent': 'space-around',\n        },\n        button: {\n            width: '30px',\n            height: '30px'\n        },\n        checkbox: {\n            width: '15px',\n            height: '15px'\n        },\n        fileItem: {\n            width:'100%',\n            display:'flex',\n            flexBasis:'auto'\n        },\n        fileTitle: {\n            width:'100%',\n        }\n\n    }\n\n    const fileQueueMap = fileQueue.map(file => (\n        <div key={file.name} >\n            <label style={styles.fileItem}>\n                <input style={styles.checkbox} name=\"filechk\" type='checkbox' value={file.name} />\n                <span style={styles.fileTitle}>{file.name}</span>\n                <span >{Math.round(Number(file.size) / 1024, 2) + 'KB'}</span>\n            </label>\n        </div>\n    ))\n\n    const inputFileChanged = (e) => {\n        let files = e.target.files;\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            _addFileQueue(file);\n\n            const data = new FormData();\n            data.append('upload', file);\n            data.append('filename', '이름1');\n            data.append('test', 'test');\n\n            console.log('data', data);\n            axios.post('/api/upload', data).then(res => {\n                console.log('success', res)\n            }).catch(e => {\n                console.log(e)\n            })\n        }\n    }\n\n    const removeFileHandler = () => {\n        let files = document.getElementsByName(\"filechk\");\n        let tempQueue = [...fileQueue];\n        for (let i = 0; i < files.length; i++) {\n            let fileName = files[i];\n            if (fileName.checked) {\n                tempQueue = _removeFileQueue(tempQueue, fileName.value);\n            }\n        }\n        setFileQueue(queue => [...tempQueue]);\n    }\n\n    const _addFileQueue = file => {\n        //[중복파일 체크]\n        if (fileQueue.some(f => f.name === file.name)) {\n            alert('이미 파일이 있습니다.!')\n            return false;\n        }\n        setFileQueue(queue => [...queue, file]);\n    }\n\n    const _removeFileQueue = (tempQueue, fileName) => {\n        tempQueue.forEach((item, idx, arr) => {\n            console.log(idx, item)\n            if (item.name === fileName) {\n                console.log('correct!')\n                tempQueue.splice(idx, 1);\n            }\n        })\n        return tempQueue;\n    }\n\n    const dropHandler = (e) => {\n        e.preventDefault();\n        if (e.dataTransfer.items) {\n            // Use DataTransferItemList interface to access the file(s)\n            for (var i = 0; i < e.dataTransfer.items.length; i++) {\n                // If dropped items aren't files, reject them\n                if (e.dataTransfer.items[i].kind === 'file') {\n                    var file = e.dataTransfer.items[i].getAsFile();\n                    console.log('1> ... file[' + i + '].name = ' + file.name, file);\n                    _addFileQueue(file);\n                }\n            }\n        } else {\n            // Use DataTransfer interface to access the file(s)\n            for (let i = 0; i < e.dataTransfer.files.length; i++) {\n                let file = e.dataTransfer.files[i];\n                _addFileQueue(file);\n                console.log('2> ... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n            }\n        }\n    }\n\n    const dragOverHandler = (e) => {\n        e.preventDefault();\n    }\n\n    //1.더할때, 파일 빼기 목록에서 지우고, 더한다. 2. 뺄때, 빼기목록에 추가\n    //3. 업로드시, 빼기목록에 없는 애들만 넘김\n    return (\n        <div style={styles.root}>\n            <input type=\"file\" id=\"contained-button-file\" onChange={inputFileChanged} accept={Array.isArray(accept) ? accept.join(',') : accept} multiple={multiple} capture={capture} style={{ display: 'none' }} />\n            <div style={styles.fileattach} onDrop={dropHandler} onDragOver={dragOverHandler}>{fileQueueMap}</div>\n            <div style={styles.fileselect}>\n                <label htmlFor=\"contained-button-file\">\n                    <Button variant=\"outlined\" component=\"span\" className={classes.button}>\n                        +\n                    </Button>\n                </label>\n                {/* <button style={styles.button} onClick={removeFileHandler}>-</button> */}\n                {/* <span onClick={removeFileHandler}>-</span> */}\n                <Button variant=\"outlined\" component=\"span\" className={classes.button} onClick={removeFileHandler}>\n                    -\n                </Button>\n\n            </div>\n        </div>\n    );\n}\n\nMWFileReader.defaultProps = {\n    accept: '*',\n    capture: true,\n    multiple: true\n}\nMWFileReader.propTypes = {\n    accept: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array\n    ]),\n    capture: PropTypes.bool,\n    multiple: PropTypes.bool\n}\nexport default MWFileReader;","import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom';\nimport MWEditor from '../editor/MWEditor'\nimport MWFileReader from '../filereader/MWFileReader'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport $ from 'jquery';\n\n\nfunction QnAPostUpdate() {\n\n    const location = useLocation();\n\n  const [content, setContent] = useState(location.data.content);\n  const [fileQueue, setFileQueue] = useState([]);\n\n \n\n  useEffect(() => {\n    console.log(location.data.title);\n    \n    return ()=>{\n      console.log(\"탈출!!!!!!!!!!!!!!!!!!!!!1\");\n    }\n  })\n\n\n\n  const mode = 'edit';// 'edit'!=='edit';\n  const styles = {\n    root: {\n      width: '700px'\n    },\n    editor: {\n      width: '100%',\n    },\n    fileattach: {\n      width: '100%',\n      height: '100px',\n    },\n\n  }\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      width: '100%',\n    },\n    textFieldInput: {\n      width: '150px',\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    buttonInc: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n\n  }));\n  const classes = useStyles();\n\n  //1. 본문내용 전송(기본항목, 에디터 본문)\n  //2. file있다면, return 받은 articleid로 fileUpload\n  const handlePreview = (e) => {\n    e.preventDefault();\n    console.log('handlePreview');\n  }\n  const handleTempSave = (e) => {\n    e.preventDefault();\n    console.log('handleTempSave');\n  }\n  const handleSubmit = (e) => {\n    \n    e.preventDefault();\n    // console.log('handleSubmit',e.target);\n    // console.log(data,e.target.writer,e.target.title.value);\n    console.log(e.target.title.value);\n    console.log(content);\n\n    const data = new FormData(e.target);\n    //파일추가만포함\n    //더 추가되야하는것 : 수정로직에서 기존 파일,신규파일,삭제파일 구분처리 필요,\n    fileQueue.forEach((value,idx,arr)=>{\n      data.append('upload',value);\n    })\n    console.log(data.entries());\n    for (var pair of data.entries()) {\n      console.log(pair[0] + ',, ' + pair[1]);\n    }\n\n    ///////////////////////////////////////////\n    const send_param = {\n      title: e.target.title.value,\n      type: \"qna\",\n      content: content\n    }\n\n    axios.put(`/boards/${location.data.id}`,send_param,\n    {\n      headers: {\n        'Authorization': 'Bearer ' + $.cookie('accessToken')\n    }\n    })\n    .then(res=>{\n      if(res.status === 200){\n        cogoToast.success(res.data.message)\n        console.log(\"수정완료.\");\n        window.location.href=\"/posts/\"+ location.data.id;\n\n      }else{\n        cogoToast.error(res.data.message)\n      \n      }\n    })\n    .catch((err) =>{\n      cogoToast.error(\"수정 실패.\");\n      console.log(err);\n\n    })\n  }\n\n\n\n\n\n  return (\n    <div>\n      \n      <form id=\"bbsForm\" name=\"bbsForm\" onSubmit={handleSubmit}>\n        <div>\n          <TextField\n            id=\"title\"\n            name=\"title\"\n            label=\"문서제목\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            defaultValue={location.data.title} />\n        </div>\n        <div id=\"_editor\" style={styles.editor}>\n          <input type=\"hidden\" id=\"content\" name=\"content\" value={content} />\n          <MWEditor mode={mode} content={content} setContent={setContent} />\n        </div>\n        <div id=\"fileAttach\" style={styles.fileattach}>\n          <MWFileReader fileQueue={fileQueue} setFileQueue={setFileQueue} />\n        </div>\n        <div className={classes.buttonInc}>\n          <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={handlePreview}>미리보기</Button>\n          <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={handleTempSave}>임시저장</Button>\n          <Button variant=\"contained\" type=\"submit\" color=\"secondary\" className={classes.button} >글쓰기</Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default QnAPostUpdate\n","import React, { useEffect, useState } from 'react'\nimport MWEditor from './editor/MWEditor'\nimport MWFileReader from './filereader/MWFileReader'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport $ from 'jquery';\n\n\nfunction BbsQnAView() {\n\n  const [content, setContent] = useState('');\n  const [fileQueue, setFileQueue] = useState([]);\n\n \n\n  useEffect(() => {\n    return ()=>{\n      console.log(\"탈출!!!!!!!!!!!!!!!!!!!!!1\");\n    }\n  })\n\n\n\n  const mode = 'edit';// 'edit'!=='edit';\n  const styles = {\n    root: {\n      width: '700px'\n    },\n    editor: {\n      width: '100%',\n    },\n    fileattach: {\n      width: '100%',\n      height: '100px',\n    },\n\n  }\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      width: '100%',\n    },\n    textFieldInput: {\n      width: '150px',\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    buttonInc: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n\n  }));\n  const classes = useStyles();\n\n  //1. 본문내용 전송(기본항목, 에디터 본문)\n  //2. file있다면, return 받은 articleid로 fileUpload\n  const handlePreview = (e) => {\n    e.preventDefault();\n    console.log('handlePreview');\n  }\n  const handleTempSave = (e) => {\n    e.preventDefault();\n    console.log('handleTempSave');\n  }\n  const handleSubmit = (e) => {\n    \n    e.preventDefault();\n    // console.log('handleSubmit',e.target);\n    // console.log(data,e.target.writer,e.target.title.value);\n    console.log(e.target.title.value);\n    console.log(content);\n\n    const data = new FormData(e.target);\n    //파일추가만포함\n    //더 추가되야하는것 : 수정로직에서 기존 파일,신규파일,삭제파일 구분처리 필요,\n    fileQueue.forEach((value,idx,arr)=>{\n      data.append('upload',value);\n    })\n    console.log(data.entries());\n    for (var pair of data.entries()) {\n      console.log(pair[0] + ',, ' + pair[1]);\n    }\n\n    ///////////////////////////////////////////\n    const send_param = {\n      title: e.target.title.value,\n      type: \"qna\",\n      content: content\n    }\n\n    axios.post('/boards',send_param,\n    {\n      headers: {\n        'Authorization': 'Bearer ' + $.cookie('accessToken')\n    }\n    })\n    .then(res=>{\n      if(res.status === 201){\n        cogoToast.success(res.data.message)\n        console.log(\"글쓰기 완료.\");\n        window.location.href=\"/qna\";\n\n      }else{\n        cogoToast.error(res.data.message)\n      }\n    })\n    .catch((err) =>{\n      console.log(err);\n\n    })\n  }\n\n\n\n\n\n  return (\n    <div>\n      \n      <form id=\"bbsForm\" name=\"bbsForm\" onSubmit={handleSubmit}>\n        <div>\n          <TextField\n            id=\"title\"\n            name=\"title\"\n            label=\"문서제목\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\" />\n        </div>\n        <div id=\"_editor\" style={styles.editor}>\n          <input type=\"hidden\" id=\"content\" name=\"content\" value={content} />\n          <MWEditor mode={mode} content={content} setContent={setContent} />\n        </div>\n        <div id=\"fileAttach\" style={styles.fileattach}>\n          <MWFileReader fileQueue={fileQueue} setFileQueue={setFileQueue} />\n        </div>\n        <div className={classes.buttonInc}>\n          <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={handlePreview}>미리보기</Button>\n          <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={handleTempSave}>임시저장</Button>\n          <Button variant=\"contained\" type=\"submit\" color=\"secondary\" className={classes.button} >글쓰기</Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default BbsQnAView\n","import React, { useEffect, useState } from 'react'\nimport MWEditor from './editor/MWEditor'\nimport MWFileReader from './filereader/MWFileReader'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport $ from 'jquery';\n\n\nfunction BbsNotificationView() {\n\n  const [content, setContent] = useState('');\n  const [fileQueue, setFileQueue] = useState([]);\n\n \n\n  useEffect(() => {\n    return ()=>{\n      console.log(\"탈출!!!!!!!!!!!!!!!!!!!!!1\");\n    }\n  })\n\n\n\n  const mode = 'edit';// 'edit'!=='edit';\n  const styles = {\n    root: {\n      width: '700px'\n    },\n    editor: {\n      width: '100%',\n    },\n    fileattach: {\n      width: '100%',\n      height: '100px',\n    },\n\n  }\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      width: '100%',\n    },\n    textFieldInput: {\n      width: '150px',\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    buttonInc: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n\n  }));\n  const classes = useStyles();\n\n  //1. 본문내용 전송(기본항목, 에디터 본문)\n  //2. file있다면, return 받은 articleid로 fileUpload\n  const handlePreview = (e) => {\n    e.preventDefault();\n    console.log('handlePreview');\n  }\n  const handleTempSave = (e) => {\n    e.preventDefault();\n    console.log('handleTempSave');\n  }\n  const handleSubmit = (e) => {\n    \n    e.preventDefault();\n    // console.log('handleSubmit',e.target);\n    // console.log(data,e.target.writer,e.target.title.value);\n    console.log(e.target.title.value);\n    console.log(content);\n\n    const data = new FormData(e.target);\n    //파일추가만포함\n    //더 추가되야하는것 : 수정로직에서 기존 파일,신규파일,삭제파일 구분처리 필요,\n    fileQueue.forEach((value,idx,arr)=>{\n      data.append('upload',value);\n    })\n    console.log(data.entries());\n    for (var pair of data.entries()) {\n      console.log(pair[0] + ',, ' + pair[1]);\n    }\n\n    ///////////////////////////////////////////\n    const send_param = {\n      title: e.target.title.value,\n      type: \"notification\",\n      content: content\n    }\n\n    axios.post('/boards',send_param,\n    {\n      headers: {\n        'Authorization': 'Bearer ' + $.cookie('accessToken')\n    }\n    })\n    .then(res=>{\n      if(res.status === 201){\n        cogoToast.success(res.data.message)\n        console.log(\"글쓰기 완료.\");\n        window.location.href=\"/notice\";\n\n      }else{\n        cogoToast.error(res.data.message)\n      }\n    })\n    .catch((err) =>{\n      console.log(err);\n\n    })\n  }\n\n\n\n\n\n  return (\n    <div>\n      \n      <form id=\"bbsForm\" name=\"bbsForm\" onSubmit={handleSubmit}>\n        <div>\n          <TextField\n            id=\"title\"\n            name=\"title\"\n            label=\"문서제목\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\" />\n        </div>\n        <div id=\"_editor\" style={styles.editor}>\n          <input type=\"hidden\" id=\"content\" name=\"content\" value={content} />\n          <MWEditor mode={mode} content={content} setContent={setContent} />\n        </div>\n        <div id=\"fileAttach\" style={styles.fileattach}>\n          <MWFileReader fileQueue={fileQueue} setFileQueue={setFileQueue} />\n        </div>\n        <div className={classes.buttonInc}>\n          <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={handlePreview}>미리보기</Button>\n          <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={handleTempSave}>임시저장</Button>\n          <Button variant=\"contained\" type=\"submit\" color=\"secondary\" className={classes.button} >글쓰기</Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default BbsNotificationView;\n","import React, { Component, useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { Table, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport $, { get } from \"jquery\";\nimport { } from \"jquery.cookie\";\nimport cogoToast from \"cogo-toast\";\nimport { } from '../../css/pagination.css';\n\nimport PostRow from \"./PostRow\";\nimport PaginationPostAndComment from \"../Pagination/PaginationPostAndComment\";\n\naxios.defaults.withCredentials = true;\n\n//post 하나당 출력\n\n//////////////////////////////////////////////\n\n///////////////////////////////////////////\n\nconst SearchPosts = () => {\n    const location = useLocation();\n\n    const [keyword, setKeyword] = useState(location.data.keyword);\n    const [searchOption, setSearchOption] = useState(location.data.searchOption);\n    const [boardName, setBoardName] = useState(location.data.boardName)\n    const [postType, setPostType] = useState(location.data.postType);\n\n    const [posts, setPosts] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n\n\n\n    useEffect(() => {\n        console.log(\"searchPosts 시작!\")\n        console.log(\"keyword \",keyword)\n        console.log(\"searchOption \", searchOption)\n        console.log(\"boardName\", boardName)\n        console.log(\"postType \", postType)\n\n        getPosts(currentPage);\n        return () => {\n            console.log(\"searchPosts 탈출.\")\n        }\n\n    },[currentPage])\n\n\n\n    const getPosts = (pageNumber) => {\n\n        console.log(\"getPosts 몇번 페이지 시작? \", pageNumber)\n        const url = `/boards/search`;\n        const send_params = {\n            page: pageNumber\n        };\n        console.log(send_params.page);\n        const send_body = {\n            option: searchOption,\n            keyword: keyword,\n            boardType: postType\n        };\n        console.log(send_body.option);\n        console.log(send_body.keyword);\n        console.log(send_body.boardType);\n        \n\n\n\n        /* 권한 체크ajax */\n        \n        axios // 실제 post List 가져오기\n            .get(url\n            ,{\n                headers: {\n                    'Authorization': 'Bearer ' + $.cookie('accessToken')\n                },\n                params: {\n                    page: pageNumber,\n                    option: searchOption,\n                    keyword: keyword,\n                    boardType: postType\n                }\n        })\n            .then(returnData => {\n                const totalPages = returnData.data.totalPages;\n\n                setTotalPages(totalPages)\n                if (returnData.data.numberOfElements > 0) {\n                    const returnedPosts = returnData.data.content;\n                    setPosts(returnedPosts);\n\n\n                } else {\n                    //게시글 못 찾은 경우\n                    posts.push([\n                        <tr>\n                            <td colSpan=\"5\" style={{ textAlign: \"center\" }}>게시글이 존재하지 않습니다.</td>\n                        </tr>\n                    ])\n\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n\n    };\n    ///////////////////////////////////////////////\n    const paginate = (pageNumber) => {\n\n        setCurrentPage(pageNumber.selected);\n\n\n        getPosts(pageNumber.selected);\n        // this.forceUpdate();\n\n\n        // window.location.reload();\n    }\n\n\n    /////////////////검색\n    const handleSearch = (e) => {\n        \n        setKeyword(e.target.value);\n\n    }\n\n\n    const onSubmit = () => {\n    \n        getPosts(0);\n    }\n\n    const handleSearchOption = (e) => {\n\n        setSearchOption(e.target.value);\n    }\n\n\n        const divStyle = {\n            marginTop: \"3%\",\n            minWidth: \"70%\",\n            minHeight: \"700px\",\n        };\n\n\n        return (\n            <div className=\"container\" style={divStyle}>\n                <div style={{ marginBottom: \"1%\" }}>\n                    <h2>{boardName} : {keyword}에 대한 검색결과 </h2>\n                </div>\n\n                <div>\n                    <h5>{totalPages} 중 {currentPage + 1} 페이지</h5>\n                </div>\n                <div>\n                    <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr style={{ textAlign: \"center\" }}>\n                                <th style={{ width: \"10%\" }}>#</th>\n                                <th style={{ width: \"40%\" }}>제목</th>\n                                <th>작성자</th>\n                                <th>작성일</th>\n                                <th>조회</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {posts.map((post) => (\n                                <PostRow PostRow={post} />\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n                <div>\n                    <PaginationPostAndComment totalPage={totalPages} paginate={paginate} />\n                </div>\n                <div>\n                        <select value={searchOption} onChange={handleSearchOption}>\n                            <option value=\"title\">\n                                제목\n                            </option>\n                            <option value=\"titleAndContent\">\n                                제목 + 내용\n                            </option>\n                            <option value=\"author\">\n                                글쓴이\n                            </option>\n                        </select>\n\n                        <input type=\"text\" placeholder=\"\" onChange={handleSearch} />\n                        \n                        <NavLink \n                        to={{\n                            pathname:`/post/search`,\n                            data: {\n                                postType: postType,\n                                searchOption: searchOption,\n                                keyword: keyword,\n                                boardName: boardName\n                            }\n                        }}\n                        >\n                        <Button type=\"submit\" >검색</Button>\n                        </NavLink>\n\n\n                </div>\n\n            </div>\n\n        );\n}\n\nexport default SearchPosts;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {} from \"../../css/boardList.css\";\n\nclass BoardList extends Component {\n    state = {\n      boards: [], \n      postType: \"\",\n      boardName: \"\"   \n    }\n  \n  //postType에 따라서 가져올 데이터 분기\n  Category = () =>{\n\n    let boards = [];//배열선언.\n\n    //push함수 boards배열에 푸쉬.\n    boards.push({\n      url: '/postNotice',\n      postType: 'SUPER',\n      boardName: \"공지사항\",\n      boardImage: \"/img/category/NoticeBoard.png\"\n    });\n    boards.push({\n      url: '/postDev',\n      postType: 'DEVELOPER',\n      boardName: \"개발자 게시판\",\n      boardImage: \"/img/category/DeveloperBoard.png\"\n    });\n    boards.push({\n      url: '/postCompany',\n      postType: 'COMPANY',\n      boardName: \"업체 게시판\",\n      boardImage: \"/img/category/CompanyBoard.png\"\n    });\n    boards.push({\n      url: '/postFree',\n      postType: \"Free\",\n      boardName: \"자유 게시판\"  ,\n      boardImage: \"/img/category/FreeBoard.png\"    \n    });\n    return boards;\n  }\n\n  //component 시작하면 getPostIndex 함수 실행\n  componentDidMount() {\n    this.getBoardList();\n  }\n  \n  getBoardList = () => {\n    let boards = this.Category();\n    const boardList = boards.map((board,index) =>(\n      <div key={index} className=\"col-12 col-md-6 col-lg-6 d-flex flex-column bg-cover py-2\" style={{maxWidth: '450px'}}>\n        <NavLink to={board.url} className=\"text-white\">\n          <div className=\"card board-image\" style={{backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${board.boardImage})`}}>\n            <h3 className=\"board-name font-weight-bolder\">{board.boardName}</h3>\n            <div className=\"card-body mt-auto mb-n11 py-8\">\n            </div>\n          </div>\n        </NavLink>  \n      </div>\n    ));    \n    this.setState({\n      boards: boardList\n    });\n  }\n\n\n  \n  render() {\n    const divStyle = {\n      marginBottom: \"3%\"\n    };\n    \n\n    return (\n      <div className=\"container\">\n        <h1 style={{marginTop: \"3%\"}}>Board List</h1><br/>\n        <div className=\"row justify-content-center\" style={divStyle}>\n          {this.state.boards}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BoardList;\n","import React, { Component } from \"react\";\n// import CKEditor from \"ckeditor4-react-advanced\";\n// import ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n// import CKEditor from \"@ckeditor/ckeditor5-react\";\n// import { Button, Form} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\nimport cogoToast from 'cogo-toast';\n// import multipart from 'connect-multiparty'\n\naxios.defaults.withCredentials = true;\n\n// const MultipartyMiddleware = multipart({uploadDir: './images'});\n\n// app.post('/uploads', MultipartyMiddleware, (req,res) =>{\n//     console.log(req.files);\n// })\n\n\nclass upload extends Component {\n \n    \n    componentDidMount(){\n        console.log(\"hi\");\n        this.uploadImage();\n    }\n\n    uploadImage = () =>{\n\n\n        axios\n        .post(`/test/image/upload`,\n          {\n            headers: {\n            'Authorization': 'Bearer ' + $.cookie('accessToken')\n            }\n          })\n        //정상 수행\n        .then(response => {\n          if (response.status === 201) {\n            cogoToast.success(response.data.message);\n            this.props.history.goBack();\n          } else {\n            cogoToast.error(\"글쓰기 실패\");\n          }\n        })\n        //에러\n        .catch(err => {\n          console.log(err);\n        });\n\n  };\n\n    \n\n\n}\n\nexport default upload;\n","import React, {Component} from \"react\";\n\nimport HomepageForm from \"./HomePage/HomePage\";\nimport {Route, Switch} from \"react-router-dom\";\nimport RankingIndex from \"./Service/RankingIndex\";\nimport ServicePage from \"./Service/ServicePage\";\nimport DashboardPage from './Service/DashboardPage'\nimport {CssBaseline} from \"@material-ui/core\";\nimport InvalidPage from \"./404Page\";\n//Member(User)\nimport JoinForm from \"./User/JoinForm\";\nimport LoginForm from \"./User/LoginForm\";\nimport UserPageForm from \"./User/UserPageForm\";\nimport LoginPage from \"./LoginPage\";\nimport UserList from './User/NewUserList';\n\n//Board(Post)\nimport Post from \"./components/Post/Post\";\nimport PostList from \"./components/Post/PostList\";\nimport PostUpdate from \"./components/Post/PostUpdate\"\nimport PostQnAWirte from \"./components/BbsQnAView\";\nimport PostNotificationWrite from \"./components/BbsNotificationView\";\nimport PostSearchList from './components/Post/SearchPosts';\nimport BoardList from \"./components/Post/BoardList\"\n\nimport Upload from \"./upload\"\n\nclass Body extends Component {\n    render() {\n        return (\n            <CssBaseline>\n                <div>\n                    <Switch>\n                        <Route path=\"/boardList\" component={BoardList}/>\n            \n\n                        <Route exact path=\"/posts/update\" component={PostUpdate}/>\n                        <Route exact path=\"/posts/qna/write\" component={PostQnAWirte}/>\n                        <Route exact path=\"/posts/notification/write\" component={PostNotificationWrite}/>\n                        \n                        <Route exact path=\"/posts/:id\" component={Post}/>\n                        \n                        <Route exact path=\"/qna\" component={PostList}/>\n                        <Route exact path=\"/notice\" component={PostList}/>\n                        <Route path=\"/uploads\" component={Upload}/>\n                        \n                        <Route exact path=\"/post/search\" component={PostSearchList}/>\n\n\n\n                        <Route path=\"/userlist\" component={UserList}/>\n         \n\n\n                        <Route path=\"/user/edit\" component={UserPageForm}/>\n                        <Route path=\"/user/login\" component={LoginForm}/>\n                        <Route path=\"/user/join\" component={JoinForm}/>\n                        <Route path=\"/dashboard\" component={DashboardPage}/>\n                        <Route path=\"/ranking\" component={RankingIndex}/>\n                        <Route path=\"/login\" component={LoginPage}/>\n\n                        <Route path=\"/service\" component={ServicePage}/>\n\n                        <Route exact path=\"/\" component={HomepageForm}/>\n\n                        <Route path=\"/*\" component={InvalidPage}/>\n                        <Route path=\"/error\" component={InvalidPage}/>\n\n\n                    </Switch>\n                </div>\n            </CssBaseline>\n        );\n    }\n}\n\nexport default Body;\n","import React from 'react'\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { error: null, errorInfo: null }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    })\n  }\n\n  render() {\n    const ErrorScreen = this.props.fallback || DefaultErrorScreen\n    if (this.state.errorInfo) {\n      return <ErrorScreen error={this.state.error} errorInfo={this.state.errorInfo} />\n    }\n    return this.props.children\n  }\n}\n\nfunction DefaultErrorScreen({ error, errorInfo }) {\n    window.location.href = \"/error\";\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {}from 'react-bootstrap';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './header';\n// import Footer from './footer';\nimport Body from './body';\nimport {} from './css/index.css';\nimport ErrorBoundary from './ErrorBoundary';\n\n\nReactDOM.render(\n  <ErrorBoundary>\n  <BrowserRouter>\n    <Header/>\n    <Body/>\n    {/* <Footer/> */}\n  </BrowserRouter>\n  </ErrorBoundary>,\n  document.getElementById('container')\n); \n"],"sourceRoot":""}